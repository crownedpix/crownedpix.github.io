function onYouTubeIframeAPIReady() {
    ytp.YTAPIReady || (ytp.YTAPIReady = !0, jQuery(document).trigger("YTAPIReady"));
}

+function(a) {
    "use strict";
    if (a.fn.carousel) {
        var b = function(c) {
            this.$element = a(c), this.carousel = this.$element.data("bs.carousel"), this.options = a.extend({}, b.DEFAULTS, this.carousel.options), 
            this.startX = this.startY = this.startTime = this.cycling = this.$active = this.$items = this.$next = this.$prev = this.dx = null, 
            this.$element.on("touchstart", a.proxy(this.touchstart, this)).on("touchmove", a.proxy(this.touchmove, this)).on("touchend", a.proxy(this.touchend, this));
        };
        b.DEFAULTS = {
            swipe: 50
        }, b.prototype.touchstart = function(a) {
            if (this.options.swipe) {
                var b = a.originalEvent.touches ? a.originalEvent.touches[0] : a;
                this.dx = 0, this.startX = b.pageX, this.startY = b.pageY, this.cycling = null, 
                this.width = this.$element.width(), this.startTime = a.timeStamp;
            }
        }, b.prototype.touchmove = function(a) {
            if (this.options.swipe) {
                var b = a.originalEvent.touches ? a.originalEvent.touches[0] : a, c = b.pageX - this.startX, d = b.pageY - this.startY;
                Math.abs(c) < Math.abs(d) || (null === this.cycling && (this.cycling = !!this.carousel.interval, 
                this.cycling && this.carousel.pause()), a.preventDefault(), this.dx = c / (this.width || 1) * 100, 
                this.swipe(this.dx));
            }
        }, b.prototype.touchend = function(b) {
            if (this.options.swipe && this.$active) {
                var c = a().add(this.$active).add(this.$prev).add(this.$next).carousel_transition(!0), d = (b.timeStamp - this.startTime) / 1e3, e = Math.abs(this.dx / d);
                this.dx > 40 || this.dx > 0 && e > this.options.swipe ? this.carousel.prev() : this.dx < -40 || this.dx < 0 && e > this.options.swipe ? this.carousel.next() : this.$active.one(a.support.transition.end, function() {
                    c.removeClass("prev next");
                }).emulateTransitionEnd(1e3 * this.$active.css("transition-duration").slice(0, -1)), 
                c.carousel_offset(!1), this.cycling && this.carousel.cycle(), this.$active = null;
            }
        }, b.prototype.swipe = function(a) {
            var b = this.$active || this.getActive();
            if (a < 0) {
                if (this.$prev.carousel_offset(!1).removeClass("prev").carousel_transition(!0), 
                !this.$next.length || this.$next.hasClass("active")) return;
                this.$next.carousel_transition(!1).addClass("next").carousel_offset(a + 100);
            } else {
                if (this.$next.carousel_offset(!1).removeClass("next").carousel_transition(!0), 
                !this.$prev.length || this.$prev.hasClass("active")) return;
                this.$prev.carousel_transition(!1).addClass("prev").carousel_offset(a - 100);
            }
            b.carousel_transition(!1).carousel_offset(a);
        }, b.prototype.getActive = function() {
            return this.$active = this.$element.find(".item.active"), this.$items = this.$active.parent().children(), 
            this.$next = this.$active.next(), !this.$next.length && this.options.wrap && (this.$next = this.$items.first()), 
            this.$prev = this.$active.prev(), !this.$prev.length && this.options.wrap && (this.$prev = this.$items.last()), 
            this.$active;
        };
        var c = a.fn.carousel;
        a.fn.carousel = function() {
            return c.apply(this, arguments), this.each(function() {
                var c = a(this), d = c.data("bs.carousel.swipe");
                d || c.data("bs.carousel.swipe", new b(this));
            });
        }, a.extend(a.fn.carousel, c), a.fn.carousel_transition = function(b) {
            return b = b ? "" : "none", this.each(function() {
                a(this).css("-webkit-transition", b).css("transition", b);
            });
        };
        var d = function() {
            if (!window.getComputedStyle) return !1;
            var a, b = document.createElement("p"), c = {
                webkitTransform: "-webkit-transform",
                OTransform: "-o-transform",
                msTransform: "-ms-transform",
                MozTransform: "-moz-transform",
                transform: "transform"
            };
            document.body.insertBefore(b, null);
            for (var d in c) void 0 !== b.style[d] && (b.style[d] = "translate3d(1px,1px,1px)", 
            a = window.getComputedStyle(b).getPropertyValue(c[d]));
            return document.body.removeChild(b), void 0 !== a && a.length > 0 && "none" !== a;
        }();
        a.fn.carousel_offset = function(b) {
            return this.each(function() {
                b ? d ? a(this).css("transform", "translate3d(" + b + "%, 0, 0)") : a(this).css("left", b + "%") : a(this).css({
                    transform: "",
                    left: ""
                });
            });
        }, a(".carousel").carousel();
    }
}(jQuery), function() {
    function a() {}
    function b(a, b) {
        for (var c = a.length; c--; ) if (a[c].listener === b) return c;
        return -1;
    }
    function c(a) {
        return function() {
            return this[a].apply(this, arguments);
        };
    }
    var d = a.prototype, e = this, f = e.EventEmitter;
    d.getListeners = function(a) {
        var b, c, d = this._getEvents();
        if ("object" == typeof a) {
            b = {};
            for (c in d) d.hasOwnProperty(c) && a.test(c) && (b[c] = d[c]);
        } else b = d[a] || (d[a] = []);
        return b;
    }, d.flattenListeners = function(a) {
        var b, c = [];
        for (b = 0; a.length > b; b += 1) c.push(a[b].listener);
        return c;
    }, d.getListenersAsObject = function(a) {
        var b, c = this.getListeners(a);
        return c instanceof Array && (b = {}, b[a] = c), b || c;
    }, d.addListener = function(a, c) {
        var d, e = this.getListenersAsObject(a), f = "object" == typeof c;
        for (d in e) e.hasOwnProperty(d) && -1 === b(e[d], c) && e[d].push(f ? c : {
            listener: c,
            once: !1
        });
        return this;
    }, d.on = c("addListener"), d.addOnceListener = function(a, b) {
        return this.addListener(a, {
            listener: b,
            once: !0
        });
    }, d.once = c("addOnceListener"), d.defineEvent = function(a) {
        return this.getListeners(a), this;
    }, d.defineEvents = function(a) {
        for (var b = 0; a.length > b; b += 1) this.defineEvent(a[b]);
        return this;
    }, d.removeListener = function(a, c) {
        var d, e, f = this.getListenersAsObject(a);
        for (e in f) f.hasOwnProperty(e) && (d = b(f[e], c), -1 !== d && f[e].splice(d, 1));
        return this;
    }, d.off = c("removeListener"), d.addListeners = function(a, b) {
        return this.manipulateListeners(!1, a, b);
    }, d.removeListeners = function(a, b) {
        return this.manipulateListeners(!0, a, b);
    }, d.manipulateListeners = function(a, b, c) {
        var d, e, f = a ? this.removeListener : this.addListener, g = a ? this.removeListeners : this.addListeners;
        if ("object" != typeof b || b instanceof RegExp) for (d = c.length; d--; ) f.call(this, b, c[d]); else for (d in b) b.hasOwnProperty(d) && (e = b[d]) && ("function" == typeof e ? f.call(this, d, e) : g.call(this, d, e));
        return this;
    }, d.removeEvent = function(a) {
        var b, c = typeof a, d = this._getEvents();
        if ("string" === c) delete d[a]; else if ("object" === c) for (b in d) d.hasOwnProperty(b) && a.test(b) && delete d[b]; else delete this._events;
        return this;
    }, d.removeAllListeners = c("removeEvent"), d.emitEvent = function(a, b) {
        var c, d, e, f, g = this.getListenersAsObject(a);
        for (e in g) if (g.hasOwnProperty(e)) for (d = g[e].length; d--; ) c = g[e][d], 
        c.once === !0 && this.removeListener(a, c.listener), f = c.listener.apply(this, b || []), 
        f === this._getOnceReturnValue() && this.removeListener(a, c.listener);
        return this;
    }, d.trigger = c("emitEvent"), d.emit = function(a) {
        var b = Array.prototype.slice.call(arguments, 1);
        return this.emitEvent(a, b);
    }, d.setOnceReturnValue = function(a) {
        return this._onceReturnValue = a, this;
    }, d._getOnceReturnValue = function() {
        return !this.hasOwnProperty("_onceReturnValue") || this._onceReturnValue;
    }, d._getEvents = function() {
        return this._events || (this._events = {});
    }, a.noConflict = function() {
        return e.EventEmitter = f, a;
    }, "function" == typeof define && define.amd ? define("eventEmitter/EventEmitter", [], function() {
        return a;
    }) : "object" == typeof module && module.exports ? module.exports = a : this.EventEmitter = a;
}.call(this), function(a) {
    function b(b) {
        var c = a.event;
        return c.target = c.target || c.srcElement || b, c;
    }
    var c = document.documentElement, d = function() {};
    c.addEventListener ? d = function(a, b, c) {
        a.addEventListener(b, c, !1);
    } : c.attachEvent && (d = function(a, c, d) {
        a[c + d] = d.handleEvent ? function() {
            var c = b(a);
            d.handleEvent.call(d, c);
        } : function() {
            var c = b(a);
            d.call(a, c);
        }, a.attachEvent("on" + c, a[c + d]);
    });
    var e = function() {};
    c.removeEventListener ? e = function(a, b, c) {
        a.removeEventListener(b, c, !1);
    } : c.detachEvent && (e = function(a, b, c) {
        a.detachEvent("on" + b, a[b + c]);
        try {
            delete a[b + c];
        } catch (d) {
            a[b + c] = void 0;
        }
    });
    var f = {
        bind: d,
        unbind: e
    };
    "function" == typeof define && define.amd ? define("eventie/eventie", f) : a.eventie = f;
}(this), function(a, b) {
    "function" == typeof define && define.amd ? define([ "eventEmitter/EventEmitter", "eventie/eventie" ], function(c, d) {
        return b(a, c, d);
    }) : "object" == typeof exports ? module.exports = b(a, require("wolfy87-eventemitter"), require("eventie")) : a.imagesLoaded = b(a, a.EventEmitter, a.eventie);
}(window, function(a, b, c) {
    function d(a, b) {
        for (var c in b) a[c] = b[c];
        return a;
    }
    function e(a) {
        return "[object Array]" === m.call(a);
    }
    function f(a) {
        var b = [];
        if (e(a)) b = a; else if ("number" == typeof a.length) for (var c = 0, d = a.length; d > c; c++) b.push(a[c]); else b.push(a);
        return b;
    }
    function g(a, b, c) {
        if (!(this instanceof g)) return new g(a, b);
        "string" == typeof a && (a = document.querySelectorAll(a)), this.elements = f(a), 
        this.options = d({}, this.options), "function" == typeof b ? c = b : d(this.options, b), 
        c && this.on("always", c), this.getImages(), j && (this.jqDeferred = new j.Deferred());
        var e = this;
        setTimeout(function() {
            e.check();
        });
    }
    function h(a) {
        this.img = a;
    }
    function i(a) {
        this.src = a, n[a] = this;
    }
    var j = a.jQuery, k = a.console, l = void 0 !== k, m = Object.prototype.toString;
    g.prototype = new b(), g.prototype.options = {}, g.prototype.getImages = function() {
        this.images = [];
        for (var a = 0, b = this.elements.length; b > a; a++) {
            var c = this.elements[a];
            "IMG" === c.nodeName && this.addImage(c);
            var d = c.nodeType;
            if (d && (1 === d || 9 === d || 11 === d)) for (var e = c.querySelectorAll("img"), f = 0, g = e.length; g > f; f++) {
                var h = e[f];
                this.addImage(h);
            }
        }
    }, g.prototype.addImage = function(a) {
        var b = new h(a);
        this.images.push(b);
    }, g.prototype.check = function() {
        function a(a, e) {
            return b.options.debug && l && k.log("confirm", a, e), b.progress(a), c++, c === d && b.complete(), 
            !0;
        }
        var b = this, c = 0, d = this.images.length;
        if (this.hasAnyBroken = !1, !d) return void this.complete();
        for (var e = 0; d > e; e++) {
            var f = this.images[e];
            f.on("confirm", a), f.check();
        }
    }, g.prototype.progress = function(a) {
        this.hasAnyBroken = this.hasAnyBroken || !a.isLoaded;
        var b = this;
        setTimeout(function() {
            b.emit("progress", b, a), b.jqDeferred && b.jqDeferred.notify && b.jqDeferred.notify(b, a);
        });
    }, g.prototype.complete = function() {
        var a = this.hasAnyBroken ? "fail" : "done";
        this.isComplete = !0;
        var b = this;
        setTimeout(function() {
            if (b.emit(a, b), b.emit("always", b), b.jqDeferred) {
                var c = b.hasAnyBroken ? "reject" : "resolve";
                b.jqDeferred[c](b);
            }
        });
    }, j && (j.fn.imagesLoaded = function(a, b) {
        var c = new g(this, a, b);
        return c.jqDeferred.promise(j(this));
    }), h.prototype = new b(), h.prototype.check = function() {
        var a = n[this.img.src] || new i(this.img.src);
        if (a.isConfirmed) return void this.confirm(a.isLoaded, "cached was confirmed");
        if (this.img.complete && void 0 !== this.img.naturalWidth) return void this.confirm(0 !== this.img.naturalWidth, "naturalWidth");
        var b = this;
        a.on("confirm", function(a, c) {
            return b.confirm(a.isLoaded, c), !0;
        }), a.check();
    }, h.prototype.confirm = function(a, b) {
        this.isLoaded = a, this.emit("confirm", this, b);
    };
    var n = {};
    return i.prototype = new b(), i.prototype.check = function() {
        if (!this.isChecked) {
            var a = new Image();
            c.bind(a, "load", this), c.bind(a, "error", this), a.src = this.src, this.isChecked = !0;
        }
    }, i.prototype.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, i.prototype.onload = function(a) {
        this.confirm(!0, "onload"), this.unbindProxyEvents(a);
    }, i.prototype.onerror = function(a) {
        this.confirm(!1, "onerror"), this.unbindProxyEvents(a);
    }, i.prototype.confirm = function(a, b) {
        this.isConfirmed = !0, this.isLoaded = a, this.emit("confirm", this, b);
    }, i.prototype.unbindProxyEvents = function(a) {
        c.unbind(a.target, "load", this), c.unbind(a.target, "error", this);
    }, g;
}), function(a) {
    "use strict";
    "function" == typeof define && define.amd ? define([ "jquery" ], a) : "undefined" != typeof exports ? module.exports = a(require("jquery")) : a(jQuery);
}(function(a) {
    Date.now || (Date.now = function() {
        return new Date().getTime();
    }), window.requestAnimationFrame || function() {
        "use strict";
        for (var a = [ "webkit", "moz" ], b = 0; b < a.length && !window.requestAnimationFrame; ++b) {
            var c = a[b];
            window.requestAnimationFrame = window[c + "RequestAnimationFrame"], window.cancelAnimationFrame = window[c + "CancelAnimationFrame"] || window[c + "CancelRequestAnimationFrame"];
        }
        if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {
            var d = 0;
            window.requestAnimationFrame = function(a) {
                var b = Date.now(), c = Math.max(d + 16, b);
                return setTimeout(function() {
                    a(d = c);
                }, c - b);
            }, window.cancelAnimationFrame = clearTimeout;
        }
    }();
    var b = function() {
        for (var a = "transform WebkitTransform MozTransform OTransform msTransform".split(" "), b = document.createElement("div"), c = 0; c < a.length; c++) if (b && void 0 !== b.style[a[c]]) return a[c];
        return !1;
    }(), c = function() {
        if (!window.getComputedStyle) return !1;
        var a, b = document.createElement("p"), c = {
            webkitTransform: "-webkit-transform",
            OTransform: "-o-transform",
            msTransform: "-ms-transform",
            MozTransform: "-moz-transform",
            transform: "transform"
        };
        (document.body || document.documentElement).insertBefore(b, null);
        for (var d in c) void 0 !== b.style[d] && (b.style[d] = "translate3d(1px,1px,1px)", 
        a = window.getComputedStyle(b).getPropertyValue(c[d]));
        return (document.body || document.documentElement).removeChild(b), void 0 !== a && a.length > 0 && "none" !== a;
    }(), d = navigator.userAgent.toLowerCase().indexOf("android") > -1, e = !!window.opera, f = [], g = function() {
        function b(b, g) {
            var h, i = this;
            i.$item = a(b), i.defaults = {
                speed: .5,
                imgSrc: null,
                imgWidth: null,
                imgHeight: null,
                enableTransform: !0,
                zIndex: -100
            }, h = i.$item.data("jarallax") || {}, i.options = a.extend({}, i.defaults, h, g), 
            i.options.speed = Math.min(1, Math.max(0, parseFloat(i.options.speed))), i.instanceID = c++, 
            i.image = {
                src: i.options.imgSrc || null,
                $container: null,
                $item: null,
                width: i.options.imgWidth || null,
                height: i.options.imgHeight || null,
                useImgTag: d || e
            }, i.initImg() && (i.init(), f.push(i));
        }
        var c = 0;
        return b;
    }();
    g.prototype.initImg = function() {
        var a = this;
        return null === a.image.src && (a.image.src = a.$item.css("background-image").replace(/^url\(['"]?/g, "").replace(/['"]?\)$/g, "")), 
        !(!a.image.src || "none" === a.image.src);
    }, g.prototype.init = function() {
        function c() {
            d.coverImage(), d.clipContainer(), d.onScroll(!0), d.$item.data("jarallax-original-styles", d.$item.attr("style")), 
            setTimeout(function() {
                d.$item.css({
                    "background-image": "none",
                    "background-attachment": "scroll",
                    "background-size": "auto"
                });
            }, 0);
        }
        var d = this, e = {
            position: "absolute",
            top: 0,
            left: 0,
            width: "100%",
            height: "100%",
            overflow: "hidden",
            "pointer-events": "none",
            transition: "transform linear -1ms, -webkit-transform linear -1ms"
        }, f = {
            position: "fixed"
        };
        d.image.$container = a("<div>").css(e).css({
            visibility: "hidden",
            "z-index": d.options.zIndex
        }).attr("id", "jarallax-container-" + d.instanceID).prependTo(d.$item), d.image.useImgTag && b ? (d.image.$item = a("<img>").attr("src", d.image.src), 
        f = a.extend({
            "max-width": "none"
        }, e, f)) : (d.image.$item = a("<div>"), f = a.extend({
            "background-position": "50% 50%",
            "background-repeat": "no-repeat no-repeat",
            "background-image": 'url("' + d.image.src + '")'
        }, e, f)), d.image.$item.css(f).prependTo(d.image.$container), d.image.width && d.image.height ? c() : d.getImageSize(d.image.src, function(a, b) {
            d.image.width = a, d.image.height = b, c();
        });
    }, g.prototype.destroy = function() {
        for (var b = this, c = 0, d = f.length; c < d; c++) if (f[c].instanceID === b.instanceID) {
            f.splice(c, 1);
            break;
        }
        a("head #jarallax-clip-" + b.instanceID).remove(), b.$item.attr("style", b.$item.data("jarallax-original-styles")), 
        b.$item.removeData("jarallax-original-styles"), b.image.$container.remove(), delete b.$item[0].jarallax;
    }, g.prototype.round = function(a) {
        return Math.floor(100 * a) / 100;
    }, g.prototype.getImageSize = function(a, b) {
        if (!a || !b) return !1;
        var c = new Image();
        c.onload = function() {
            b(c.width, c.height);
        }, c.src = a;
    }, g.prototype.clipContainer = function() {
        var b = this, c = b.image.$container.outerWidth(!0), d = b.image.$container.outerHeight(!0), e = a("head #jarallax-clip-" + b.instanceID);
        e.length || (a("head").append('<style type="text/css" id="jarallax-clip-' + b.instanceID + '"></style>'), 
        e = a("head #jarallax-clip-" + b.instanceID));
        var f = [ "#jarallax-container-" + b.instanceID + " {", "   clip: rect(0px " + c + "px " + d + "px 0);", "   clip: rect(0px, " + c + "px, " + d + "px, 0);", "}" ].join("\n");
        e[0].styleSheet ? e[0].styleSheet.cssText = f : e.html(f);
    }, g.prototype.coverImage = function() {
        var c = this;
        if (c.image.width && c.image.height) {
            var d, e, f = c.image.$container.outerWidth(!0), g = c.image.$container.outerHeight(!0), h = a(window).outerWidth(!0), i = a(window).outerHeight(!0), j = c.image.width, k = c.image.height, l = {
                width: Math.max(h, f) * Math.max(c.options.speed, 1),
                height: Math.max(i, g) * Math.max(c.options.speed, 1)
            };
            l.width / l.height > j / k ? (d = l.width, e = l.width * k / j) : (d = l.height * j / k, 
            e = l.height), c.image.useImgTag && b ? (l.width = c.round(d), l.height = c.round(e), 
            l.marginLeft = c.round(-(d - f) / 2), l.marginTop = c.round(-(e - g) / 2)) : l.backgroundSize = c.round(d) + "px " + c.round(e) + "px", 
            c.image.$item.css(l);
        }
    }, g.prototype.onScroll = function(d) {
        var e = this;
        if (e.image.width && e.image.height) {
            var f = a(window).scrollTop(), g = a(window).scrollLeft(), h = (a(window).width(), 
            a(window).height()), i = e.$item.offset().top, j = e.$item.offset().left, k = e.$item.outerHeight(!0), l = {
                visibility: "visible",
                backgroundPosition: "50% 50%"
            }, m = !d && (i + k < f || i > f + h);
            if (!m) {
                var n = -(f - i) * e.options.speed, o = -(g - j) * e.options.speed;
                n = e.round(n), o = e.round(o), b && e.options.enableTransform ? (l.transform = "translateY(" + n + "px) translateX(" + o + "px)", 
                c && (l.transform = "translate3d(" + o + "px, " + n + "px, 0)")) : l.backgroundPosition = o + "px " + n + "px", 
                e.image.$item.css(l);
            }
        }
    }, function() {
        a(window).on("scroll.jarallax", function() {
            window.requestAnimationFrame(function() {
                for (var a = 0, b = f.length; a < b; a++) f[a].onScroll();
            });
        });
        var b;
        a(window).on("resize.jarallax orientationchange.jarallax load.jarallax", function() {
            clearTimeout(b), b = setTimeout(function() {
                window.requestAnimationFrame(function() {
                    for (var a = 0, b = f.length; a < b; a++) {
                        var c = f[a];
                        c.coverImage(), c.clipContainer(), c.onScroll();
                    }
                });
            }, 100);
        });
    }();
    var h = a.fn.jarallax;
    a.fn.jarallax = function() {
        var a, b = this, c = arguments[0], d = Array.prototype.slice.call(arguments, 1), e = b.length, f = 0;
        for (f; f < e; f++) if ("object" == typeof c || "undefined" == typeof c ? b[f].jarallax || (b[f].jarallax = new g(b[f], c)) : a = b[f].jarallax ? b[f].jarallax[c].apply(b[f].jarallax, d) : void 0, 
        "undefined" != typeof a) return a;
        return this;
    }, a.fn.jarallax.noConflict = function() {
        return a.fn.jarallax = h, this;
    }, a(document).on("ready.data-jarallax", function() {
        a("[data-jarallax]").jarallax();
    });
});

var ytp = ytp || {};

!function(jQuery, ytp) {
    var getYTPVideoID = function(a) {
        var b, c;
        return a.indexOf("youtu.be") > 0 ? (b = a.substr(a.lastIndexOf("/") + 1, a.length), 
        c = b.indexOf("?list=") > 0 ? b.substr(b.lastIndexOf("="), b.length) : null, b = c ? b.substr(0, b.lastIndexOf("?")) : b) : a.indexOf("http") > -1 ? (b = a.match(/[\\?&]v=([^&#]*)/)[1], 
        c = a.indexOf("list=") > 0 ? a.match(/[\\?&]list=([^&#]*)/)[1] : null) : (b = a.length > 15 ? null : a, 
        c = b ? null : a), {
            videoID: b,
            playlistID: c
        };
    };
    jQuery.mbYTPlayer = {
        name: "jquery.mb.YTPlayer",
        version: "2.9.3",
        author: "Matteo Bicocchi",
        apiKey: "",
        defaults: {
            containment: "body",
            ratio: "auto",
            videoURL: null,
            playlistURL: null,
            startAt: 0,
            stopAt: 0,
            autoPlay: !0,
            vol: 50,
            addRaster: !1,
            opacity: 1,
            quality: "default",
            mute: !1,
            loop: !0,
            showControls: !0,
            showAnnotations: !1,
            showYTLogo: !0,
            stopMovieOnBlur: !0,
            realfullscreen: !0,
            gaTrack: !0,
            optimizeDisplay: !0,
            onReady: function(a) {}
        },
        controls: {
            play: "P",
            pause: "p",
            mute: "M",
            unmute: "A",
            onlyYT: "O",
            showSite: "R",
            ytLogo: "Y"
        },
        locationProtocol: "https:",
        buildPlayer: function(options) {
            return this.each(function() {
                var YTPlayer = this, $YTPlayer = jQuery(YTPlayer);
                YTPlayer.loop = 0, YTPlayer.opt = {}, YTPlayer.state = {}, YTPlayer.filtersEnabled = !0, 
                YTPlayer.filters = {
                    grayscale: {
                        value: 0,
                        unit: "%"
                    },
                    hue_rotate: {
                        value: 0,
                        unit: "deg"
                    },
                    invert: {
                        value: 0,
                        unit: "%"
                    },
                    opacity: {
                        value: 0,
                        unit: "%"
                    },
                    saturate: {
                        value: 0,
                        unit: "%"
                    },
                    sepia: {
                        value: 0,
                        unit: "%"
                    },
                    brightness: {
                        value: 0,
                        unit: "%"
                    },
                    contrast: {
                        value: 0,
                        unit: "%"
                    },
                    blur: {
                        value: 0,
                        unit: "px"
                    }
                }, $YTPlayer.addClass("mb_YTPlayer");
                var property = $YTPlayer.data("property") && "string" == typeof $YTPlayer.data("property") ? eval("(" + $YTPlayer.data("property") + ")") : $YTPlayer.data("property");
                "undefined" != typeof property && "undefined" != typeof property.vol && (property.vol = 0 === property.vol ? property.vol = 1 : property.vol), 
                jQuery.extend(YTPlayer.opt, jQuery.mbYTPlayer.defaults, options, property), YTPlayer.hasChanged || (YTPlayer.defaultOpt = {}, 
                jQuery.extend(YTPlayer.defaultOpt, jQuery.mbYTPlayer.defaults, options, property)), 
                YTPlayer.isRetina = window.retina || window.devicePixelRatio > 1;
                var isIframe = function() {
                    var a = !1;
                    try {
                        self.location.href != top.location.href && (a = !0);
                    } catch (b) {
                        a = !0;
                    }
                    return a;
                };
                YTPlayer.canGoFullScreen = !(jQuery.browser.msie || jQuery.browser.opera || isIframe()), 
                YTPlayer.canGoFullScreen || (YTPlayer.opt.realfullscreen = !1), $YTPlayer.attr("id") || $YTPlayer.attr("id", "video_" + new Date().getTime());
                var playerID = "mbYTP_" + YTPlayer.id;
                YTPlayer.isAlone = !1, YTPlayer.hasFocus = !0;
                var videoID = this.opt.videoURL ? getYTPVideoID(this.opt.videoURL).videoID : !!$YTPlayer.attr("href") && getYTPVideoID($YTPlayer.attr("href")).videoID, playlistID = this.opt.videoURL ? getYTPVideoID(this.opt.videoURL).playlistID : !!$YTPlayer.attr("href") && getYTPVideoID($YTPlayer.attr("href")).playlistID;
                YTPlayer.videoID = videoID, YTPlayer.playlistID = playlistID, YTPlayer.opt.showAnnotations = YTPlayer.opt.showAnnotations ? "0" : "3";
                var playerVars = {
                    autoplay: 0,
                    modestbranding: 1,
                    controls: 0,
                    showinfo: 0,
                    rel: 0,
                    enablejsapi: 1,
                    version: 3,
                    playerapiid: playerID,
                    origin: "*",
                    allowfullscreen: !0,
                    wmode: "transparent",
                    iv_load_policy: YTPlayer.opt.showAnnotations
                };
                document.createElement("video").canPlayType && jQuery.extend(playerVars, {
                    html5: 1
                }), jQuery.browser.msie && jQuery.browser.version < 9 && (this.opt.opacity = 1);
                var playerBox = jQuery("<div/>").attr("id", playerID).addClass("playerBox"), overlay = jQuery("<div/>").css({
                    position: "absolute",
                    top: 0,
                    left: 0,
                    width: "100%",
                    height: "100%"
                }).addClass("YTPOverlay");
                if (YTPlayer.isSelf = "self" == YTPlayer.opt.containment, YTPlayer.defaultOpt.containment = YTPlayer.opt.containment = jQuery("self" == YTPlayer.opt.containment ? this : YTPlayer.opt.containment), 
                YTPlayer.isBackground = "body" == YTPlayer.opt.containment.get(0).tagName.toLowerCase(), 
                !YTPlayer.isBackground || !ytp.backgroundIsInited) {
                    var isPlayer = YTPlayer.opt.containment.is(jQuery(this));
                    if (YTPlayer.canPlayOnMobile = isPlayer && 0 === jQuery(this).children().length, 
                    isPlayer ? YTPlayer.isPlayer = !0 : $YTPlayer.hide(), jQuery.browser.mobile && !YTPlayer.canPlayOnMobile) return void $YTPlayer.remove();
                    var wrapper = jQuery("<div/>").addClass("mbYTP_wrapper").attr("id", "wrapper_" + playerID);
                    if (wrapper.css({
                        position: "absolute",
                        zIndex: 0,
                        minWidth: "100%",
                        minHeight: "100%",
                        left: 0,
                        top: 0,
                        overflow: "hidden",
                        opacity: 0
                    }), playerBox.css({
                        position: "absolute",
                        zIndex: 0,
                        width: "100%",
                        height: "100%",
                        top: 0,
                        left: 0,
                        overflow: "hidden"
                    }), wrapper.append(playerBox), YTPlayer.opt.containment.children().not("script, style").each(function() {
                        "static" == jQuery(this).css("position") && jQuery(this).css("position", "relative");
                    }), YTPlayer.isBackground ? (jQuery("body").css({
                        boxSizing: "border-box"
                    }), wrapper.css({
                        position: "fixed",
                        top: 0,
                        left: 0,
                        zIndex: 0
                    }), $YTPlayer.hide()) : "static" == YTPlayer.opt.containment.css("position") && YTPlayer.opt.containment.css({
                        position: "relative"
                    }), YTPlayer.opt.containment.prepend(wrapper), YTPlayer.wrapper = wrapper, playerBox.css({
                        opacity: 1
                    }), jQuery.browser.mobile || (playerBox.after(overlay), YTPlayer.overlay = overlay), 
                    YTPlayer.isBackground || overlay.on("mouseenter", function() {
                        YTPlayer.controlBar && YTPlayer.controlBar.addClass("visible");
                    }).on("mouseleave", function() {
                        YTPlayer.controlBar && YTPlayer.controlBar.removeClass("visible");
                    }), ytp.YTAPIReady) setTimeout(function() {
                        jQuery(document).trigger("YTAPIReady");
                    }, 100); else {
                        jQuery("#YTAPI").remove();
                        var tag = jQuery("<script></script>").attr({
                            src: jQuery.mbYTPlayer.locationProtocol + "//www.youtube.com/iframe_api?v=" + jQuery.mbYTPlayer.version,
                            id: "YTAPI"
                        });
                        jQuery("head").prepend(tag);
                    }
                    jQuery(document).on("YTAPIReady", function() {
                        YTPlayer.isBackground && ytp.backgroundIsInited || YTPlayer.isInit || (YTPlayer.isBackground && (ytp.backgroundIsInited = !0), 
                        YTPlayer.opt.autoPlay = "undefined" == typeof YTPlayer.opt.autoPlay ? !!YTPlayer.isBackground : YTPlayer.opt.autoPlay, 
                        YTPlayer.opt.vol = YTPlayer.opt.vol ? YTPlayer.opt.vol : 100, jQuery.mbYTPlayer.getDataFromAPI(YTPlayer), 
                        jQuery(YTPlayer).on("YTPChanged", function() {
                            if (!YTPlayer.isInit) {
                                if (YTPlayer.isInit = !0, jQuery.browser.mobile && YTPlayer.canPlayOnMobile) {
                                    if (YTPlayer.opt.containment.outerWidth() > jQuery(window).width()) {
                                        YTPlayer.opt.containment.css({
                                            maxWidth: "100%"
                                        });
                                        var h = .6 * YTPlayer.opt.containment.outerWidth();
                                        YTPlayer.opt.containment.css({
                                            maxHeight: h
                                        });
                                    }
                                    return void new YT.Player(playerID, {
                                        videoId: YTPlayer.videoID.toString(),
                                        height: "100%",
                                        width: "100%",
                                        events: {
                                            onReady: function(a) {
                                                YTPlayer.player = a.target, playerBox.css({
                                                    opacity: 1
                                                }), YTPlayer.wrapper.css({
                                                    opacity: 1
                                                });
                                            }
                                        }
                                    });
                                }
                                new YT.Player(playerID, {
                                    videoId: YTPlayer.videoID.toString(),
                                    playerVars: playerVars,
                                    events: {
                                        onReady: function(a) {
                                            if (YTPlayer.player = a.target, !YTPlayer.isReady) {
                                                YTPlayer.isReady = !(YTPlayer.isPlayer && !YTPlayer.opt.autoPlay), YTPlayer.playerEl = YTPlayer.player.getIframe(), 
                                                $YTPlayer.optimizeDisplay(), YTPlayer.videoID = videoID, jQuery(window).on("resize.YTP", function() {
                                                    $YTPlayer.optimizeDisplay();
                                                }), jQuery.mbYTPlayer.checkForState(YTPlayer);
                                                var b = jQuery.Event("YTPUnstarted");
                                                b.time = YTPlayer.player.time, YTPlayer.canTrigger && jQuery(YTPlayer).trigger(b);
                                            }
                                        },
                                        onStateChange: function(event) {
                                            if ("function" == typeof event.target.getPlayerState) {
                                                var state = event.target.getPlayerState();
                                                if (YTPlayer.state != state) {
                                                    YTPlayer.state = state;
                                                    var eventType;
                                                    switch (state) {
                                                      case -1:
                                                        eventType = "YTPUnstarted";
                                                        break;

                                                      case 0:
                                                        eventType = "YTPEnd";
                                                        break;

                                                      case 1:
                                                        eventType = "YTPStart", YTPlayer.controlBar && YTPlayer.controlBar.find(".mb_YTPPlaypause").html(jQuery.mbYTPlayer.controls.pause), 
                                                        "undefined" != typeof _gaq && eval(YTPlayer.opt.gaTrack) && _gaq.push([ "_trackEvent", "YTPlayer", "Play", YTPlayer.hasData ? YTPlayer.videoData.title : YTPlayer.videoID.toString() ]), 
                                                        "undefined" != typeof ga && eval(YTPlayer.opt.gaTrack) && ga("send", "event", "YTPlayer", "play", YTPlayer.hasData ? YTPlayer.videoData.title : YTPlayer.videoID.toString());
                                                        break;

                                                      case 2:
                                                        eventType = "YTPPause", YTPlayer.controlBar && YTPlayer.controlBar.find(".mb_YTPPlaypause").html(jQuery.mbYTPlayer.controls.play);
                                                        break;

                                                      case 3:
                                                        YTPlayer.player.setPlaybackQuality(YTPlayer.opt.quality), eventType = "YTPBuffering", 
                                                        YTPlayer.controlBar && YTPlayer.controlBar.find(".mb_YTPPlaypause").html(jQuery.mbYTPlayer.controls.play);
                                                        break;

                                                      case 5:
                                                        eventType = "YTPCued";
                                                    }
                                                    var YTPEvent = jQuery.Event(eventType);
                                                    YTPEvent.time = YTPlayer.player.time, YTPlayer.canTrigger && jQuery(YTPlayer).trigger(YTPEvent);
                                                }
                                            }
                                        },
                                        onPlaybackQualityChange: function(a) {
                                            var b = a.target.getPlaybackQuality(), c = jQuery.Event("YTPQualityChange");
                                            c.quality = b, jQuery(YTPlayer).trigger(c);
                                        },
                                        onError: function(a) {
                                            150 == a.data && (console.log("Embedding this video is restricted by Youtube."), 
                                            YTPlayer.isPlayList && jQuery(YTPlayer).playNext()), 2 == a.data && YTPlayer.isPlayList && jQuery(YTPlayer).playNext(), 
                                            "function" == typeof YTPlayer.opt.onError && YTPlayer.opt.onError($YTPlayer, a);
                                        }
                                    }
                                });
                            }
                        }));
                    });
                }
            });
        },
        getDataFromAPI: function(a) {
            if (a.videoData = jQuery.mbStorage.get("YYTPlayer_data_" + a.videoID), a.videoData) setTimeout(function() {
                a.opt.ratio = "auto" == a.opt.ratio ? "16/9" : a.opt.ratio, a.dataReceived = !0, 
                jQuery(a).trigger("YTPChanged");
                var b = jQuery.Event("YTPData");
                b.prop = {};
                for (var c in a.videoData) b.prop[c] = a.videoData[c];
                jQuery(a).trigger(b);
            }, 500), a.hasData = !0; else if (jQuery.mbYTPlayer.apiKey) jQuery.getJSON("https://www.googleapis.com/youtube/v3/videos?id=" + a.videoID + "&key=" + jQuery.mbYTPlayer.apiKey + "&part=snippet", function(b) {
                function c(b) {
                    a.videoData = {}, a.videoData.id = a.videoID, a.videoData.channelTitle = b.channelTitle, 
                    a.videoData.title = b.title, a.videoData.description = b.description.length < 400 ? b.description : b.description.substring(0, 400) + " ...", 
                    a.videoData.aspectratio = "auto" == a.opt.ratio ? "16/9" : a.opt.ratio, a.opt.ratio = a.videoData.aspectratio, 
                    a.videoData.thumb_max = b.thumbnails.maxres ? b.thumbnails.maxres.url : null, a.videoData.thumb_high = b.thumbnails.high ? b.thumbnails.high.url : null, 
                    a.videoData.thumb_medium = b.thumbnails.medium ? b.thumbnails.medium.url : null, 
                    jQuery.mbStorage.set("YYTPlayer_data_" + a.videoID, a.videoData);
                }
                a.dataReceived = !0, jQuery(a).trigger("YTPChanged"), c(b.items[0].snippet), a.hasData = !0;
                var d = jQuery.Event("YTPData");
                d.prop = {};
                for (var e in a.videoData) d.prop[e] = a.videoData[e];
                jQuery(a).trigger(d);
            }); else {
                if (setTimeout(function() {
                    jQuery(a).trigger("YTPChanged");
                }, 50), a.isPlayer && !a.opt.autoPlay) {
                    var b = "https://i.ytimg.com/vi/" + a.videoID + "/hqdefault.jpg";
                    a.opt.containment.css({
                        background: "rgba(0,0,0,0.5) url(" + b + ") center center",
                        backgroundSize: "cover"
                    }), a.opt.backgroundUrl = b;
                }
                a.videoData = null, a.opt.ratio = "auto" == a.opt.ratio ? "16/9" : a.opt.ratio;
            }
            jQuery(a).off("YTPData.YTPlayer").on("YTPData.YTPlayer", function() {
                if (!a.hasData && (a.hasData = !0, a.isPlayer && !a.opt.autoPlay)) {
                    var b = a.videoData.thumb_max || a.videoData.thumb_high || a.videoData.thumb_medium;
                    a.opt.containment.css({
                        background: "rgba(0,0,0,0.5) url(" + b + ") center center",
                        backgroundSize: "cover"
                    }), a.opt.backgroundUrl = b;
                }
            }), a.isPlayer && !a.opt.autoPlay && (a.loading = jQuery("<div/>").addClass("loading").html("Loading").hide(), 
            jQuery(a).append(a.loading), a.loading.fadeIn());
        },
        removeStoredData: function() {
            jQuery.mbStorage.remove();
        },
        getVideoData: function() {
            var a = this.get(0);
            return a.videoData;
        },
        getVideoID: function() {
            var a = this.get(0);
            return a.videoID || !1;
        },
        setVideoQuality: function(a) {
            var b = this.get(0);
            jQuery.browser.chrome || b.player.setPlaybackQuality(a);
        },
        playlist: function(a, b, c) {
            var d = this, e = d.get(0);
            return e.isPlayList = !0, b && (a = jQuery.shuffle(a)), e.videoID || (e.videos = a, 
            e.videoCounter = 0, e.videoLength = a.length, jQuery(e).data("property", a[0]), 
            jQuery(e).mb_YTPlayer()), "function" == typeof c && jQuery(e).on("YTPChanged", function() {
                c(e);
            }), jQuery(e).on("YTPEnd", function() {
                jQuery(e).playNext();
            }), d;
        },
        playNext: function() {
            var a = this.get(0);
            return a.videoCounter++, a.videoCounter >= a.videoLength && (a.videoCounter = 0), 
            jQuery(a).changeMovie(a.videos[a.videoCounter]), this;
        },
        playPrev: function() {
            var a = this.get(0);
            return a.videoCounter--, a.videoCounter < 0 && (a.videoCounter = a.videoLength - 1), 
            jQuery(a).changeMovie(a.videos[a.videoCounter]), this;
        },
        changeMovie: function(a) {
            var b = this.get(0);
            b.opt.startAt = 0, b.opt.stopAt = 0, b.opt.mute = !0, b.hasData = !1, b.hasChanged = !0, 
            a && jQuery.extend(b.opt, b.defaultOpt, a), b.videoID = getYTPVideoID(b.opt.videoURL).videoID, 
            jQuery(b.playerEl).CSSAnimate({
                opacity: 0
            }, 200, function() {
                return jQuery(b).YTPGetPlayer().cueVideoByUrl(encodeURI(jQuery.mbYTPlayer.locationProtocol + "//www.youtube.com/v/" + b.videoID), 1, b.opt.quality), 
                jQuery.mbYTPlayer.checkForState(b), jQuery(b).optimizeDisplay(), jQuery.mbYTPlayer.getDataFromAPI(b), 
                this;
            });
        },
        getPlayer: function() {
            return jQuery(this).get(0).player;
        },
        playerDestroy: function() {
            var a = this.get(0);
            ytp.YTAPIReady = !1, ytp.backgroundIsInited = !1, a.isInit = !1, a.videoID = null;
            var b = a.wrapper;
            return b.remove(), jQuery("#controlBar_" + a.id).remove(), clearInterval(a.checkForStartAt), 
            clearInterval(a.getState), this;
        },
        fullscreen: function(real) {
            function hideMouse() {
                YTPlayer.overlay.css({
                    cursor: "none"
                });
            }
            function RunPrefixMethod(a, b) {
                for (var c, d, e = [ "webkit", "moz", "ms", "o", "" ], f = 0; f < e.length && !a[c]; ) {
                    if (c = b, "" == e[f] && (c = c.substr(0, 1).toLowerCase() + c.substr(1)), c = e[f] + c, 
                    d = typeof a[c], "undefined" != d) return e = [ e[f] ], "function" == d ? a[c]() : a[c];
                    f++;
                }
            }
            function launchFullscreen(a) {
                RunPrefixMethod(a, "RequestFullScreen");
            }
            function cancelFullscreen() {
                (RunPrefixMethod(document, "FullScreen") || RunPrefixMethod(document, "IsFullScreen")) && RunPrefixMethod(document, "CancelFullScreen");
            }
            var YTPlayer = this.get(0);
            "undefined" == typeof real && (real = YTPlayer.opt.realfullscreen), real = eval(real);
            var controls = jQuery("#controlBar_" + YTPlayer.id), fullScreenBtn = controls.find(".mb_OnlyYT"), videoWrapper = YTPlayer.isSelf ? YTPlayer.opt.containment : YTPlayer.wrapper;
            if (real) {
                var fullscreenchange = jQuery.browser.mozilla ? "mozfullscreenchange" : jQuery.browser.webkit ? "webkitfullscreenchange" : "fullscreenchange";
                jQuery(document).off(fullscreenchange).on(fullscreenchange, function() {
                    var a = RunPrefixMethod(document, "IsFullScreen") || RunPrefixMethod(document, "FullScreen");
                    a ? (jQuery(YTPlayer).YTPSetVideoQuality("default"), jQuery(YTPlayer).trigger("YTPFullScreenStart")) : (YTPlayer.isAlone = !1, 
                    fullScreenBtn.html(jQuery.mbYTPlayer.controls.onlyYT), jQuery(YTPlayer).YTPSetVideoQuality(YTPlayer.opt.quality), 
                    videoWrapper.removeClass("fullscreen"), videoWrapper.CSSAnimate({
                        opacity: YTPlayer.opt.opacity
                    }, 500), videoWrapper.css({
                        zIndex: 0
                    }), YTPlayer.isBackground ? jQuery("body").after(controls) : YTPlayer.wrapper.before(controls), 
                    jQuery(window).resize(), jQuery(YTPlayer).trigger("YTPFullScreenEnd"));
                });
            }
            return YTPlayer.isAlone ? (jQuery(document).off("mousemove.YTPlayer"), YTPlayer.overlay.css({
                cursor: "auto"
            }), real ? cancelFullscreen() : (videoWrapper.CSSAnimate({
                opacity: YTPlayer.opt.opacity
            }, 500), videoWrapper.css({
                zIndex: 0
            })), fullScreenBtn.html(jQuery.mbYTPlayer.controls.onlyYT), YTPlayer.isAlone = !1) : (jQuery(document).on("mousemove.YTPlayer", function(a) {
                YTPlayer.overlay.css({
                    cursor: "auto"
                }), clearTimeout(YTPlayer.hideCursor), jQuery(a.target).parents().is(".mb_YTPBar") || (YTPlayer.hideCursor = setTimeout(hideMouse, 3e3));
            }), hideMouse(), real ? (videoWrapper.css({
                opacity: 0
            }), videoWrapper.addClass("fullscreen"), launchFullscreen(videoWrapper.get(0)), 
            setTimeout(function() {
                videoWrapper.CSSAnimate({
                    opacity: 1
                }, 1e3), YTPlayer.wrapper.append(controls), jQuery(YTPlayer).optimizeDisplay(), 
                YTPlayer.player.seekTo(YTPlayer.player.getCurrentTime() + .1, !0);
            }, 500)) : videoWrapper.css({
                zIndex: 1e4
            }).CSSAnimate({
                opacity: 1
            }, 1e3), fullScreenBtn.html(jQuery.mbYTPlayer.controls.showSite), YTPlayer.isAlone = !0), 
            this;
        },
        toggleLoops: function() {
            var a = this.get(0), b = a.opt;
            return 1 == b.loop ? b.loop = 0 : (b.startAt ? a.player.seekTo(b.startAt) : a.player.playVideo(), 
            b.loop = 1), this;
        },
        play: function() {
            var a = this.get(0);
            if (a.isReady) {
                var b = jQuery("#controlBar_" + a.id), c = b.find(".mb_YTPPlaypause");
                return c.html(jQuery.mbYTPlayer.controls.pause), a.player.playVideo(), a.wrapper.CSSAnimate({
                    opacity: a.isAlone ? 1 : a.opt.opacity
                }, 2e3), jQuery(a.playerEl).CSSAnimate({
                    opacity: 1
                }, 1e3), jQuery(a).css("background-image", "none"), this;
            }
        },
        togglePlay: function(a) {
            var b = this.get(0);
            return 1 == b.state ? this.YTPPause() : this.YTPPlay(), "function" == typeof a && a(b.state), 
            this;
        },
        stop: function() {
            var a = this.get(0), b = jQuery("#controlBar_" + a.id), c = b.find(".mb_YTPPlaypause");
            return c.html(jQuery.mbYTPlayer.controls.play), a.player.stopVideo(), this;
        },
        pause: function() {
            var a = this.get(0), b = jQuery("#controlBar_" + a.id), c = b.find(".mb_YTPPlaypause");
            return c.html(jQuery.mbYTPlayer.controls.play), a.player.pauseVideo(), this;
        },
        seekTo: function(a) {
            var b = this.get(0);
            return b.player.seekTo(a, !0), this;
        },
        setVolume: function(a) {
            var b = this.get(0);
            return a || b.opt.vol || 0 != b.player.getVolume() ? !a && b.player.getVolume() > 0 || a && b.opt.vol == a ? b.isMute ? jQuery(b).YTPUnmute() : jQuery(b).YTPMute() : (b.opt.vol = a, 
            b.player.setVolume(b.opt.vol), b.volumeBar && b.volumeBar.length && b.volumeBar.updateSliderVal(a)) : jQuery(b).YTPUnmute(), 
            this;
        },
        mute: function() {
            var a = this.get(0);
            if (!a.isMute) {
                a.player.mute(), a.isMute = !0, a.player.setVolume(0), a.volumeBar && a.volumeBar.length && a.volumeBar.width() > 10 && a.volumeBar.updateSliderVal(0);
                var b = jQuery("#controlBar_" + a.id), c = b.find(".mb_YTPMuteUnmute");
                c.html(jQuery.mbYTPlayer.controls.unmute), jQuery(a).addClass("isMuted"), a.volumeBar && a.volumeBar.length && a.volumeBar.addClass("muted");
                var d = jQuery.Event("YTPMuted");
                return d.time = a.player.time, a.canTrigger && jQuery(a).trigger(d), this;
            }
        },
        unmute: function() {
            var a = this.get(0);
            if (a.isMute) {
                a.player.unMute(), a.isMute = !1, a.player.setVolume(a.opt.vol), a.volumeBar && a.volumeBar.length && a.volumeBar.updateSliderVal(a.opt.vol > 10 ? a.opt.vol : 10);
                var b = jQuery("#controlBar_" + a.id), c = b.find(".mb_YTPMuteUnmute");
                c.html(jQuery.mbYTPlayer.controls.mute), jQuery(a).removeClass("isMuted"), a.volumeBar && a.volumeBar.length && a.volumeBar.removeClass("muted");
                var d = jQuery.Event("YTPUnmuted");
                return d.time = a.player.time, a.canTrigger && jQuery(a).trigger(d), this;
            }
        },
        applyFilter: function(a, b) {
            var c = this.get(0);
            return c.filters[a].value = b, c.filtersEnabled && this.YTPEnableFilters(), this;
        },
        applyFilters: function(a) {
            var b = this.get(0);
            return this.on("YTPReady", function() {
                for (var c in a) b.filters[c].value = a[c], jQuery(b).YTPApplyFilter(c, a[c]);
                jQuery(b).trigger("YTPFiltersApplied");
            }), this;
        },
        toggleFilter: function(a, b) {
            return this.each(function() {
                var c = this;
                c.filters[a].value ? c.filters[a].value = 0 : c.filters[a].value = b, c.filtersEnabled && jQuery(this).YTPEnableFilters();
            });
        },
        toggleFilters: function(a) {
            return this.each(function() {
                var b = this;
                b.filtersEnabled ? (jQuery(b).trigger("YTPDisableFilters"), jQuery(b).YTPDisableFilters()) : (jQuery(b).YTPEnableFilters(), 
                jQuery(b).trigger("YTPEnableFilters")), "function" == typeof a && a(b.filtersEnabled);
            });
        },
        disableFilters: function() {
            return this.each(function() {
                var a = this, b = jQuery(a.playerEl);
                b.css("-webkit-filter", ""), b.css("filter", ""), a.filtersEnabled = !1;
            });
        },
        enableFilters: function() {
            return this.each(function() {
                var a = this, b = jQuery(a.playerEl), c = "";
                for (var d in a.filters) a.filters[d].value && (c += d.replace("_", "-") + "(" + a.filters[d].value + a.filters[d].unit + ") ");
                b.css("-webkit-filter", c), b.css("filter", c), a.filtersEnabled = !0;
            });
        },
        removeFilter: function(a, b) {
            return this.each(function() {
                "function" == typeof a && (b = a, a = null);
                var c = this;
                if (a) jQuery(this).YTPApplyFilter(a, 0), "function" == typeof b && b(a); else for (var d in c.filters) jQuery(this).YTPApplyFilter(d, 0), 
                "function" == typeof b && b(d);
            });
        },
        manageProgress: function() {
            var a = this.get(0), b = jQuery("#controlBar_" + a.id), c = b.find(".mb_YTPProgress"), d = b.find(".mb_YTPLoaded"), e = b.find(".mb_YTPseekbar"), f = c.outerWidth(), g = Math.floor(a.player.getCurrentTime()), h = Math.floor(a.player.getDuration()), i = g * f / h, j = 0, k = 100 * a.player.getVideoLoadedFraction();
            return d.css({
                left: j,
                width: k + "%"
            }), e.css({
                left: 0,
                width: i
            }), {
                totalTime: h,
                currentTime: g
            };
        },
        buildControls: function(YTPlayer) {
            var data = YTPlayer.opt;
            if (data.showYTLogo = data.showYTLogo || data.printUrl, !jQuery("#controlBar_" + YTPlayer.id).length) {
                YTPlayer.controlBar = jQuery("<span/>").attr("id", "controlBar_" + YTPlayer.id).addClass("mb_YTPBar").css({
                    whiteSpace: "noWrap",
                    position: YTPlayer.isBackground ? "fixed" : "absolute",
                    zIndex: YTPlayer.isBackground ? 1e4 : 1e3
                }).hide();
                var buttonBar = jQuery("<div/>").addClass("buttonBar"), playpause = jQuery("<span>" + jQuery.mbYTPlayer.controls.play + "</span>").addClass("mb_YTPPlaypause ytpicon").click(function() {
                    1 == YTPlayer.player.getPlayerState() ? jQuery(YTPlayer).YTPPause() : jQuery(YTPlayer).YTPPlay();
                }), MuteUnmute = jQuery("<span>" + jQuery.mbYTPlayer.controls.mute + "</span>").addClass("mb_YTPMuteUnmute ytpicon").click(function() {
                    0 == YTPlayer.player.getVolume() ? jQuery(YTPlayer).YTPUnmute() : jQuery(YTPlayer).YTPMute();
                }), volumeBar = jQuery("<div/>").addClass("mb_YTPVolumeBar").css({
                    display: "inline-block"
                });
                YTPlayer.volumeBar = volumeBar;
                var idx = jQuery("<span/>").addClass("mb_YTPTime"), vURL = data.videoURL ? data.videoURL : "";
                vURL.indexOf("http") < 0 && (vURL = jQuery.mbYTPlayer.locationProtocol + "//www.youtube.com/watch?v=" + data.videoURL);
                var movieUrl = jQuery("<span/>").html(jQuery.mbYTPlayer.controls.ytLogo).addClass("mb_YTPUrl ytpicon").attr("title", "view on YouTube").on("click", function() {
                    window.open(vURL, "viewOnYT");
                }), onlyVideo = jQuery("<span/>").html(jQuery.mbYTPlayer.controls.onlyYT).addClass("mb_OnlyYT ytpicon").on("click", function() {
                    jQuery(YTPlayer).YTPFullscreen(data.realfullscreen);
                }), progressBar = jQuery("<div/>").addClass("mb_YTPProgress").css("position", "absolute").click(function(a) {
                    timeBar.css({
                        width: a.clientX - timeBar.offset().left
                    }), YTPlayer.timeW = a.clientX - timeBar.offset().left, YTPlayer.controlBar.find(".mb_YTPLoaded").css({
                        width: 0
                    });
                    var b = Math.floor(YTPlayer.player.getDuration());
                    YTPlayer.goto = timeBar.outerWidth() * b / progressBar.outerWidth(), YTPlayer.player.seekTo(parseFloat(YTPlayer.goto), !0), 
                    YTPlayer.controlBar.find(".mb_YTPLoaded").css({
                        width: 0
                    });
                }), loadedBar = jQuery("<div/>").addClass("mb_YTPLoaded").css("position", "absolute"), timeBar = jQuery("<div/>").addClass("mb_YTPseekbar").css("position", "absolute");
                progressBar.append(loadedBar).append(timeBar), buttonBar.append(playpause).append(MuteUnmute).append(volumeBar).append(idx), 
                data.showYTLogo && buttonBar.append(movieUrl), (YTPlayer.isBackground || eval(YTPlayer.opt.realfullscreen) && !YTPlayer.isBackground) && buttonBar.append(onlyVideo), 
                YTPlayer.controlBar.append(buttonBar).append(progressBar), YTPlayer.isBackground ? jQuery("body").after(YTPlayer.controlBar) : (YTPlayer.controlBar.addClass("inlinePlayer"), 
                YTPlayer.wrapper.before(YTPlayer.controlBar)), volumeBar.simpleSlider({
                    initialval: YTPlayer.opt.vol,
                    scale: 100,
                    orientation: "h",
                    callback: function(a) {
                        0 == a.value ? jQuery(YTPlayer).YTPMute() : jQuery(YTPlayer).YTPUnmute(), YTPlayer.player.setVolume(a.value), 
                        YTPlayer.isMute || (YTPlayer.opt.vol = a.value);
                    }
                });
            }
        },
        checkForState: function(YTPlayer) {
            var interval = YTPlayer.opt.showControls ? 100 : 1e3;
            return clearInterval(YTPlayer.getState), jQuery.contains(document, YTPlayer) ? (jQuery.mbYTPlayer.checkForStart(YTPlayer), 
            void (YTPlayer.getState = setInterval(function() {
                var prog = jQuery(YTPlayer).YTPManageProgress(), $YTPlayer = jQuery(YTPlayer), data = YTPlayer.opt, startAt = YTPlayer.opt.startAt ? YTPlayer.opt.startAt : 0, stopAt = YTPlayer.opt.stopAt > YTPlayer.opt.startAt ? YTPlayer.opt.stopAt : 0;
                if (stopAt = stopAt < YTPlayer.player.getDuration() ? stopAt : 0, YTPlayer.player.time != prog.currentTime) {
                    var YTPEvent = jQuery.Event("YTPTime");
                    YTPEvent.time = YTPlayer.player.time, jQuery(YTPlayer).trigger(YTPEvent);
                }
                if (YTPlayer.player.time = prog.currentTime, 0 == YTPlayer.player.getVolume() ? $YTPlayer.addClass("isMuted") : $YTPlayer.removeClass("isMuted"), 
                YTPlayer.opt.showControls && (prog.totalTime ? YTPlayer.controlBar.find(".mb_YTPTime").html(jQuery.mbYTPlayer.formatTime(prog.currentTime) + " / " + jQuery.mbYTPlayer.formatTime(prog.totalTime)) : YTPlayer.controlBar.find(".mb_YTPTime").html("-- : -- / -- : --")), 
                eval(YTPlayer.opt.stopMovieOnBlur) && (document.hasFocus() ? document.hasFocus() && !YTPlayer.hasFocus && -1 != YTPlayer.state && 0 != YTPlayer.state && (YTPlayer.hasFocus = !0, 
                $YTPlayer.YTPPlay()) : 1 == YTPlayer.state && (YTPlayer.hasFocus = !1, $YTPlayer.YTPPause())), 
                YTPlayer.controlBar && YTPlayer.controlBar.outerWidth() <= 400 && !YTPlayer.isCompact ? (YTPlayer.controlBar.addClass("compact"), 
                YTPlayer.isCompact = !0, !YTPlayer.isMute && YTPlayer.volumeBar && YTPlayer.volumeBar.updateSliderVal(YTPlayer.opt.vol)) : YTPlayer.controlBar && YTPlayer.controlBar.outerWidth() > 400 && YTPlayer.isCompact && (YTPlayer.controlBar.removeClass("compact"), 
                YTPlayer.isCompact = !1, !YTPlayer.isMute && YTPlayer.volumeBar && YTPlayer.volumeBar.updateSliderVal(YTPlayer.opt.vol)), 
                1 == YTPlayer.player.getPlayerState() && (parseFloat(YTPlayer.player.getDuration() - 3) < YTPlayer.player.getCurrentTime() || stopAt > 0 && parseFloat(YTPlayer.player.getCurrentTime()) > stopAt)) {
                    if (YTPlayer.isEnded) return;
                    if (YTPlayer.isEnded = !0, setTimeout(function() {
                        YTPlayer.isEnded = !1;
                    }, 2e3), YTPlayer.isPlayList) {
                        clearInterval(YTPlayer.getState);
                        var YTPEnd = jQuery.Event("YTPEnd");
                        return YTPEnd.time = YTPlayer.player.time, void jQuery(YTPlayer).trigger(YTPEnd);
                    }
                    data.loop ? YTPlayer.player.seekTo(startAt, !0) : (YTPlayer.player.pauseVideo(), 
                    YTPlayer.wrapper.CSSAnimate({
                        opacity: 0
                    }, 1e3, function() {
                        var a = jQuery.Event("YTPEnd");
                        a.time = YTPlayer.player.time, jQuery(YTPlayer).trigger(a), YTPlayer.player.seekTo(startAt, !0), 
                        YTPlayer.isBackground || YTPlayer.opt.containment.css({
                            background: "rgba(0,0,0,0.5) url(" + YTPlayer.opt.backgroundUrl + ") center center",
                            backgroundSize: "cover"
                        });
                    }));
                }
            }, interval))) : (jQuery(YTPlayer).YTPPlayerDestroy(), clearInterval(YTPlayer.getState), 
            void clearInterval(YTPlayer.checkForStartAt));
        },
        checkForStart: function(a) {
            var b = jQuery(a);
            if (!jQuery.contains(document, a)) return void jQuery(a).YTPPlayerDestroy();
            if (jQuery.browser.chrome && (a.opt.quality = "default"), a.player.pauseVideo(), 
            jQuery(a).muteYTPVolume(), jQuery("#controlBar_" + a.id).remove(), a.opt.showControls && jQuery.mbYTPlayer.buildControls(a), 
            a.opt.addRaster) {
                var c = "dot" == a.opt.addRaster ? "raster-dot" : "raster";
                a.overlay.addClass(a.isRetina ? c + " retina" : c);
            } else a.overlay.removeClass(function(a, b) {
                var c = b.split(" "), d = [];
                return jQuery.each(c, function(a, b) {
                    /raster.*/.test(b) && d.push(b);
                }), d.push("retina"), d.join(" ");
            });
            a.checkForStartAt = setInterval(function() {
                jQuery(a).YTPMute();
                var c = a.opt.startAt ? a.opt.startAt : 1, d = a.player.getVideoLoadedFraction() > c / a.player.getDuration();
                if (a.player.getDuration() > 0 && a.player.getCurrentTime() >= c && d) {
                    clearInterval(a.checkForStartAt), a.isReady = !0, "function" == typeof a.opt.onReady && a.opt.onReady(a);
                    var e = jQuery.Event("YTPReady");
                    jQuery(a).trigger(e), a.player.pauseVideo(), a.opt.mute || jQuery(a).YTPUnmute(), 
                    a.canTrigger = !0, a.opt.autoPlay ? (b.YTPPlay(), b.css("background-image", "none"), 
                    jQuery(a.playerEl).CSSAnimate({
                        opacity: 1
                    }, 1e3), a.wrapper.CSSAnimate({
                        opacity: a.isAlone ? 1 : a.opt.opacity
                    }, 1e3)) : (a.player.pauseVideo(), a.isPlayer || (jQuery(a.playerEl).CSSAnimate({
                        opacity: 1
                    }, 1e3), a.wrapper.CSSAnimate({
                        opacity: a.isAlone ? 1 : a.opt.opacity
                    }, 1e3))), a.isPlayer && !a.opt.autoPlay && (a.loading.html("Ready"), setTimeout(function() {
                        a.loading.fadeOut();
                    }, 100)), a.controlBar && a.controlBar.slideDown(1e3);
                } else c >= 0 && a.player.seekTo(c, !0);
            }, 1e3);
        },
        formatTime: function(a) {
            var b = Math.floor(a / 60), c = Math.floor(a - 60 * b);
            return (9 >= b ? "0" + b : b) + " : " + (9 >= c ? "0" + c : c);
        }
    }, jQuery.fn.toggleVolume = function() {
        var a = this.get(0);
        if (a) return a.player.isMuted() ? (jQuery(a).YTPUnmute(), !0) : (jQuery(a).YTPMute(), 
        !1);
    }, jQuery.fn.optimizeDisplay = function() {
        var a = this.get(0), b = a.opt, c = jQuery(a.playerEl), d = {}, e = a.wrapper;
        d.width = e.outerWidth(), d.height = e.outerHeight();
        var f = 24, g = 100, h = {};
        b.optimizeDisplay ? (h.width = d.width + d.width * f / 100, h.height = "16/9" == b.ratio ? Math.ceil(9 * d.width / 16) : Math.ceil(3 * d.width / 4), 
        h.marginTop = -((h.height - d.height) / 2), h.marginLeft = -(d.width * (f / 2) / 100), 
        h.height < d.height && (h.height = d.height + d.height * f / 100, h.width = "16/9" == b.ratio ? Math.floor(16 * d.height / 9) : Math.floor(4 * d.height / 3), 
        h.marginTop = -(d.height * (f / 2) / 100), h.marginLeft = -((h.width - d.width) / 2)), 
        h.width += g, h.height += g, h.marginTop -= g / 2, h.marginLeft -= g / 2) : (h.width = "100%", 
        h.height = "100%", h.marginTop = 0, h.marginLeft = 0), c.css({
            width: h.width,
            height: h.height,
            marginTop: h.marginTop,
            marginLeft: h.marginLeft
        });
    }, jQuery.shuffle = function(a) {
        for (var b = a.slice(), c = b.length, d = c; d--; ) {
            var e = parseInt(Math.random() * c), f = b[d];
            b[d] = b[e], b[e] = f;
        }
        return b;
    }, jQuery.fn.YTPlayer = jQuery.mbYTPlayer.buildPlayer, jQuery.fn.YTPlaylist = jQuery.mbYTPlayer.playlist, 
    jQuery.fn.YTPPlayNext = jQuery.mbYTPlayer.playNext, jQuery.fn.YTPPlayPrev = jQuery.mbYTPlayer.playPrev, 
    jQuery.fn.YTPChangeMovie = jQuery.mbYTPlayer.changeMovie, jQuery.fn.YTPGetVideoID = jQuery.mbYTPlayer.getVideoID, 
    jQuery.fn.YTPGetPlayer = jQuery.mbYTPlayer.getPlayer, jQuery.fn.YTPPlayerDestroy = jQuery.mbYTPlayer.playerDestroy, 
    jQuery.fn.YTPFullscreen = jQuery.mbYTPlayer.fullscreen, jQuery.fn.YTPPlay = jQuery.mbYTPlayer.play, 
    jQuery.fn.YTPTogglePlay = jQuery.mbYTPlayer.togglePlay, jQuery.fn.YTPToggleLoops = jQuery.mbYTPlayer.toggleLoops, 
    jQuery.fn.YTPStop = jQuery.mbYTPlayer.stop, jQuery.fn.YTPPause = jQuery.mbYTPlayer.pause, 
    jQuery.fn.YTPSeekTo = jQuery.mbYTPlayer.seekTo, jQuery.fn.YTPMute = jQuery.mbYTPlayer.mute, 
    jQuery.fn.YTPUnmute = jQuery.mbYTPlayer.unmute, jQuery.fn.YTPToggleVolume = jQuery.mbYTPlayer.toggleVolume, 
    jQuery.fn.YTPSetVolume = jQuery.mbYTPlayer.setVolume, jQuery.fn.YTPSetVideoQuality = jQuery.mbYTPlayer.setVideoQuality, 
    jQuery.fn.YTPManageProgress = jQuery.mbYTPlayer.manageProgress, jQuery.fn.YTPGetVideoData = jQuery.mbYTPlayer.getVideoData, 
    jQuery.fn.YTPApplyFilter = jQuery.mbYTPlayer.applyFilter, jQuery.fn.YTPApplyFilters = jQuery.mbYTPlayer.applyFilters, 
    jQuery.fn.YTPToggleFilter = jQuery.mbYTPlayer.toggleFilter, jQuery.fn.YTPToggleFilters = jQuery.mbYTPlayer.toggleFilters, 
    jQuery.fn.YTPRemoveFilter = jQuery.mbYTPlayer.removeFilter, jQuery.fn.YTPDisableFilters = jQuery.mbYTPlayer.disableFilters, 
    jQuery.fn.YTPEnableFilters = jQuery.mbYTPlayer.enableFilters, jQuery.fn.mb_YTPlayer = jQuery.mbYTPlayer.buildPlayer, 
    jQuery.fn.playNext = jQuery.mbYTPlayer.playNext, jQuery.fn.playPrev = jQuery.mbYTPlayer.playPrev, 
    jQuery.fn.changeMovie = jQuery.mbYTPlayer.changeMovie, jQuery.fn.getVideoID = jQuery.mbYTPlayer.getVideoID, 
    jQuery.fn.getPlayer = jQuery.mbYTPlayer.getPlayer, jQuery.fn.playerDestroy = jQuery.mbYTPlayer.playerDestroy, 
    jQuery.fn.fullscreen = jQuery.mbYTPlayer.fullscreen, jQuery.fn.buildYTPControls = jQuery.mbYTPlayer.buildControls, 
    jQuery.fn.playYTP = jQuery.mbYTPlayer.play, jQuery.fn.toggleLoops = jQuery.mbYTPlayer.toggleLoops, 
    jQuery.fn.stopYTP = jQuery.mbYTPlayer.stop, jQuery.fn.pauseYTP = jQuery.mbYTPlayer.pause, 
    jQuery.fn.seekToYTP = jQuery.mbYTPlayer.seekTo, jQuery.fn.muteYTPVolume = jQuery.mbYTPlayer.mute, 
    jQuery.fn.unmuteYTPVolume = jQuery.mbYTPlayer.unmute, jQuery.fn.setYTPVolume = jQuery.mbYTPlayer.setVolume, 
    jQuery.fn.setVideoQuality = jQuery.mbYTPlayer.setVideoQuality, jQuery.fn.manageYTPProgress = jQuery.mbYTPlayer.manageProgress, 
    jQuery.fn.YTPGetDataFromFeed = jQuery.mbYTPlayer.getVideoData;
}(jQuery, ytp), !function($) {
    function uncamel(a) {
        return a.replace(/([A-Z])/g, function(a) {
            return "-" + a.toLowerCase();
        });
    }
    function setUnit(a, b) {
        return "string" != typeof a || a.match(/^[\-0-9\.]+$/) ? "" + a + b : a;
    }
    function setFilter(a, b, c) {
        var d = uncamel(b), e = jQuery.browser.mozilla ? "" : $.CSS.sfx;
        a[e + "filter"] = a[e + "filter"] || "", c = setUnit(c > $.CSS.filters[b].max ? $.CSS.filters[b].max : c, $.CSS.filters[b].unit), 
        a[e + "filter"] += d + "(" + c + ") ", delete a[b];
    }
    eval(function(a, b, c, d, e, f) {
        if (e = function(a) {
            return a;
        }, !"".replace(/^/, String)) {
            for (;c--; ) f[c] = d[c] || c;
            d = [ function(a) {
                return f[a];
            } ], e = function() {
                return "\\w+";
            }, c = 1;
        }
        for (;c--; ) d[c] && (a = a.replace(new RegExp("\\b" + e(c) + "\\b", "g"), d[c]));
        return a;
    }('29 11=17.53;24(!2.9){2.9={};2.9.34=!1;2.9.22=!1;2.9.45=!1;2.9.42=!1;2.9.40=!1;2.9.28=!1;2.9.56=11;2.9.16=17.51;2.9.13=""+47(17.23);2.9.18=26(17.23,10);29 32,12,20;24(-1!=(12=11.15("33")))2.9.45=!0,2.9.16="33",2.9.13=11.14(12+6),-1!=(12=11.15("25"))&&(2.9.13=11.14(12+8));27 24(-1!=(12=11.15("58")))2.9.28=!0,2.9.16="36 38 39",2.9.13=11.14(12+5);27 24(-1!=11.15("57")){2.9.28=!0;2.9.16="36 38 39";29 30=11.15("59:")+3,43=30+4;2.9.13=11.14(30,43)}27-1!=(12=11.15("41"))?(2.9.22=!0,2.9.40=!0,2.9.16="41",2.9.13=11.14(12+7)):-1!=(12=11.15("31"))?(2.9.22=!0,2.9.42=!0,2.9.16="31",2.9.13=11.14(12+7),-1!=(12=11.15("25"))&&(2.9.13=11.14(12+8))):-1!=(12=11.15("68"))?(2.9.22=!0,2.9.16="31",2.9.13=11.14(12+7),-1!=(12=11.15("25"))&&(2.9.13=11.14(12+8))):-1!=(12=11.15("35"))?(2.9.34=!0,2.9.16="35",2.9.13=11.14(12+8)):(32=11.37(" ")+1)<(12=11.37("/"))&&(2.9.16=11.14(32,12),2.9.13=11.14(12+1),2.9.16.63()==2.9.16.64()&&(2.9.16=17.51));-1!=(20=2.9.13.15(";"))&&(2.9.13=2.9.13.14(0,20));-1!=(20=2.9.13.15(" "))&&(2.9.13=2.9.13.14(0,20));2.9.18=26(""+2.9.13,10);67(2.9.18)&&(2.9.13=""+47(17.23),2.9.18=26(17.23,10));2.9.69=2.9.18}2.9.46=/65/19.21(11);2.9.49=/66/19.21(11);2.9.48=/60|61|55/19.21(11);2.9.50=/33 52/19.21(11);2.9.44=/54/19.21(11);2.9.62=2.9.46||2.9.49||2.9.48||2.9.44||2.9.50;', 10, 70, "||jQuery|||||||browser||nAgt|verOffset|fullVersion|substring|indexOf|name|navigator|majorVersion|i|ix|test|webkit|appVersion|if|Version|parseInt|else|msie|var|start|Safari|nameOffset|Opera|mozilla|Firefox|Microsoft|lastIndexOf|Internet|Explorer|chrome|Chrome|safari|end|windowsMobile|opera|android|parseFloat|ios|blackberry|operaMobile|appName|Mini|userAgent|IEMobile|iPod|ua|Trident|MSIE|rv|iPhone|iPad|mobile|toLowerCase|toUpperCase|Android|BlackBerry|isNaN|AppleWebkit|version".split("|"), 0, {})), 
    jQuery.support.CSStransition = function() {
        var a = document.body || document.documentElement, b = a.style;
        return void 0 !== b.transition || void 0 !== b.WebkitTransition || void 0 !== b.MozTransition || void 0 !== b.MsTransition || void 0 !== b.OTransition;
    }(), $.CSS = {
        name: "mb.CSSAnimate",
        author: "Matteo Bicocchi",
        version: "2.0.0",
        transitionEnd: "transitionEnd",
        sfx: "",
        filters: {
            blur: {
                min: 0,
                max: 100,
                unit: "px"
            },
            brightness: {
                min: 0,
                max: 400,
                unit: "%"
            },
            contrast: {
                min: 0,
                max: 400,
                unit: "%"
            },
            grayscale: {
                min: 0,
                max: 100,
                unit: "%"
            },
            hueRotate: {
                min: 0,
                max: 360,
                unit: "deg"
            },
            invert: {
                min: 0,
                max: 100,
                unit: "%"
            },
            saturate: {
                min: 0,
                max: 400,
                unit: "%"
            },
            sepia: {
                min: 0,
                max: 100,
                unit: "%"
            }
        },
        normalizeCss: function(a) {
            var b = jQuery.extend(!0, {}, a);
            jQuery.browser.webkit || jQuery.browser.opera ? $.CSS.sfx = "-webkit-" : jQuery.browser.mozilla ? $.CSS.sfx = "-moz-" : jQuery.browser.msie && ($.CSS.sfx = "-ms-");
            for (var c in b) {
                "transform" === c && (b[$.CSS.sfx + "transform"] = b[c], delete b[c]), "transform-origin" === c && (b[$.CSS.sfx + "transform-origin"] = a[c], 
                delete b[c]), "filter" !== c || jQuery.browser.mozilla || (b[$.CSS.sfx + "filter"] = a[c], 
                delete b[c]), "blur" === c && setFilter(b, "blur", a[c]), "brightness" === c && setFilter(b, "brightness", a[c]), 
                "contrast" === c && setFilter(b, "contrast", a[c]), "grayscale" === c && setFilter(b, "grayscale", a[c]), 
                "hueRotate" === c && setFilter(b, "hueRotate", a[c]), "invert" === c && setFilter(b, "invert", a[c]), 
                "saturate" === c && setFilter(b, "saturate", a[c]), "sepia" === c && setFilter(b, "sepia", a[c]);
                var d = "";
                "x" === c && (d = $.CSS.sfx + "transform", b[d] = b[d] || "", b[d] += " translateX(" + setUnit(a[c], "px") + ")", 
                delete b[c]), "y" === c && (d = $.CSS.sfx + "transform", b[d] = b[d] || "", b[d] += " translateY(" + setUnit(a[c], "px") + ")", 
                delete b[c]), "z" === c && (d = $.CSS.sfx + "transform", b[d] = b[d] || "", b[d] += " translateZ(" + setUnit(a[c], "px") + ")", 
                delete b[c]), "rotate" === c && (d = $.CSS.sfx + "transform", b[d] = b[d] || "", 
                b[d] += " rotate(" + setUnit(a[c], "deg") + ")", delete b[c]), "rotateX" === c && (d = $.CSS.sfx + "transform", 
                b[d] = b[d] || "", b[d] += " rotateX(" + setUnit(a[c], "deg") + ")", delete b[c]), 
                "rotateY" === c && (d = $.CSS.sfx + "transform", b[d] = b[d] || "", b[d] += " rotateY(" + setUnit(a[c], "deg") + ")", 
                delete b[c]), "rotateZ" === c && (d = $.CSS.sfx + "transform", b[d] = b[d] || "", 
                b[d] += " rotateZ(" + setUnit(a[c], "deg") + ")", delete b[c]), "scale" === c && (d = $.CSS.sfx + "transform", 
                b[d] = b[d] || "", b[d] += " scale(" + setUnit(a[c], "") + ")", delete b[c]), "scaleX" === c && (d = $.CSS.sfx + "transform", 
                b[d] = b[d] || "", b[d] += " scaleX(" + setUnit(a[c], "") + ")", delete b[c]), "scaleY" === c && (d = $.CSS.sfx + "transform", 
                b[d] = b[d] || "", b[d] += " scaleY(" + setUnit(a[c], "") + ")", delete b[c]), "scaleZ" === c && (d = $.CSS.sfx + "transform", 
                b[d] = b[d] || "", b[d] += " scaleZ(" + setUnit(a[c], "") + ")", delete b[c]), "skew" === c && (d = $.CSS.sfx + "transform", 
                b[d] = b[d] || "", b[d] += " skew(" + setUnit(a[c], "deg") + ")", delete b[c]), 
                "skewX" === c && (d = $.CSS.sfx + "transform", b[d] = b[d] || "", b[d] += " skewX(" + setUnit(a[c], "deg") + ")", 
                delete b[c]), "skewY" === c && (d = $.CSS.sfx + "transform", b[d] = b[d] || "", 
                b[d] += " skewY(" + setUnit(a[c], "deg") + ")", delete b[c]), "perspective" === c && (d = $.CSS.sfx + "transform", 
                b[d] = b[d] || "", b[d] += " perspective(" + setUnit(a[c], "px") + ")", delete b[c]);
            }
            return b;
        },
        getProp: function(a) {
            var b = [];
            for (var c in a) b.indexOf(c) < 0 && b.push(uncamel(c));
            return b.join(",");
        },
        animate: function(a, b, c, d, e) {
            return this.each(function() {
                function f() {
                    g.called = !0, g.CSSAIsRunning = !1, h.off($.CSS.transitionEnd + "." + g.id), clearTimeout(g.timeout), 
                    h.css($.CSS.sfx + "transition", ""), "function" == typeof e && e.apply(g), "function" == typeof g.CSSqueue && (g.CSSqueue(), 
                    g.CSSqueue = null);
                }
                var g = this, h = jQuery(this);
                g.id = g.id || "CSSA_" + new Date().getTime();
                var i = i || {
                    type: "noEvent"
                };
                if (g.CSSAIsRunning && g.eventType == i.type && !jQuery.browser.msie && jQuery.browser.version <= 9) return void (g.CSSqueue = function() {
                    h.CSSAnimate(a, b, c, d, e);
                });
                if (g.CSSqueue = null, g.eventType = i.type, 0 !== h.length && a) {
                    if (a = $.normalizeCss(a), g.CSSAIsRunning = !0, "function" == typeof b && (e = b, 
                    b = jQuery.fx.speeds._default), "function" == typeof c && (d = c, c = 0), "string" == typeof c && (e = c, 
                    c = 0), "function" == typeof d && (e = d, d = "cubic-bezier(0.65,0.03,0.36,0.72)"), 
                    "string" == typeof b) for (var j in jQuery.fx.speeds) {
                        if (b == j) {
                            b = jQuery.fx.speeds[j];
                            break;
                        }
                        b = jQuery.fx.speeds._default;
                    }
                    if (b || (b = jQuery.fx.speeds._default), "string" == typeof e && (d = e, e = null), 
                    !jQuery.support.CSStransition) {
                        for (var k in a) {
                            if ("transform" === k && delete a[k], "filter" === k && delete a[k], "transform-origin" === k && delete a[k], 
                            "auto" === a[k] && delete a[k], "x" === k) {
                                var l = a[k], m = "left";
                                a[m] = l, delete a[k];
                            }
                            if ("y" === k) {
                                var l = a[k], m = "top";
                                a[m] = l, delete a[k];
                            }
                            ("-ms-transform" === k || "-ms-filter" === k) && delete a[k];
                        }
                        return void h.delay(c).animate(a, b, e);
                    }
                    var n = {
                        default: "ease",
                        in: "ease-in",
                        out: "ease-out",
                        "in-out": "ease-in-out",
                        snap: "cubic-bezier(0,1,.5,1)",
                        easeOutCubic: "cubic-bezier(.215,.61,.355,1)",
                        easeInOutCubic: "cubic-bezier(.645,.045,.355,1)",
                        easeInCirc: "cubic-bezier(.6,.04,.98,.335)",
                        easeOutCirc: "cubic-bezier(.075,.82,.165,1)",
                        easeInOutCirc: "cubic-bezier(.785,.135,.15,.86)",
                        easeInExpo: "cubic-bezier(.95,.05,.795,.035)",
                        easeOutExpo: "cubic-bezier(.19,1,.22,1)",
                        easeInOutExpo: "cubic-bezier(1,0,0,1)",
                        easeInQuad: "cubic-bezier(.55,.085,.68,.53)",
                        easeOutQuad: "cubic-bezier(.25,.46,.45,.94)",
                        easeInOutQuad: "cubic-bezier(.455,.03,.515,.955)",
                        easeInQuart: "cubic-bezier(.895,.03,.685,.22)",
                        easeOutQuart: "cubic-bezier(.165,.84,.44,1)",
                        easeInOutQuart: "cubic-bezier(.77,0,.175,1)",
                        easeInQuint: "cubic-bezier(.755,.05,.855,.06)",
                        easeOutQuint: "cubic-bezier(.23,1,.32,1)",
                        easeInOutQuint: "cubic-bezier(.86,0,.07,1)",
                        easeInSine: "cubic-bezier(.47,0,.745,.715)",
                        easeOutSine: "cubic-bezier(.39,.575,.565,1)",
                        easeInOutSine: "cubic-bezier(.445,.05,.55,.95)",
                        easeInBack: "cubic-bezier(.6,-.28,.735,.045)",
                        easeOutBack: "cubic-bezier(.175, .885,.32,1.275)",
                        easeInOutBack: "cubic-bezier(.68,-.55,.265,1.55)"
                    };
                    n[d] && (d = n[d]), h.off($.CSS.transitionEnd + "." + g.id);
                    var o = $.CSS.getProp(a), p = {};
                    $.extend(p, a), p[$.CSS.sfx + "transition-property"] = o, p[$.CSS.sfx + "transition-duration"] = b + "ms", 
                    p[$.CSS.sfx + "transition-delay"] = c + "ms", p[$.CSS.sfx + "transition-timing-function"] = d, 
                    setTimeout(function() {
                        h.one($.CSS.transitionEnd + "." + g.id, f), h.css(p);
                    }, 1), g.timeout = setTimeout(function() {
                        return g.called || !e ? (g.called = !1, void (g.CSSAIsRunning = !1)) : (h.css($.CSS.sfx + "transition", ""), 
                        e.apply(g), g.CSSAIsRunning = !1, void ("function" == typeof g.CSSqueue && (g.CSSqueue(), 
                        g.CSSqueue = null)));
                    }, b + c + 10);
                }
            });
        }
    }, $.fn.CSSAnimate = $.CSS.animate, $.normalizeCss = $.CSS.normalizeCss, $.fn.css3 = function(a) {
        return this.each(function() {
            var b = $(this), c = $.normalizeCss(a);
            b.css(c);
        });
    };
}(jQuery);

var nAgt = navigator.userAgent;

if (!jQuery.browser) {
    jQuery.browser = {}, jQuery.browser.mozilla = !1, jQuery.browser.webkit = !1, jQuery.browser.opera = !1, 
    jQuery.browser.safari = !1, jQuery.browser.chrome = !1, jQuery.browser.msie = !1, 
    jQuery.browser.ua = nAgt, jQuery.browser.name = navigator.appName, jQuery.browser.fullVersion = "" + parseFloat(navigator.appVersion), 
    jQuery.browser.majorVersion = parseInt(navigator.appVersion, 10);
    var nameOffset, verOffset, ix;
    if (-1 != (verOffset = nAgt.indexOf("Opera"))) jQuery.browser.opera = !0, jQuery.browser.name = "Opera", 
    jQuery.browser.fullVersion = nAgt.substring(verOffset + 6), -1 != (verOffset = nAgt.indexOf("Version")) && (jQuery.browser.fullVersion = nAgt.substring(verOffset + 8)); else if (-1 != (verOffset = nAgt.indexOf("OPR"))) jQuery.browser.opera = !0, 
    jQuery.browser.name = "Opera", jQuery.browser.fullVersion = nAgt.substring(verOffset + 4); else if (-1 != (verOffset = nAgt.indexOf("MSIE"))) jQuery.browser.msie = !0, 
    jQuery.browser.name = "Microsoft Internet Explorer", jQuery.browser.fullVersion = nAgt.substring(verOffset + 5); else if (-1 != nAgt.indexOf("Trident")) {
        jQuery.browser.msie = !0, jQuery.browser.name = "Microsoft Internet Explorer";
        var start = nAgt.indexOf("rv:") + 3, end = start + 4;
        jQuery.browser.fullVersion = nAgt.substring(start, end);
    } else -1 != (verOffset = nAgt.indexOf("Chrome")) ? (jQuery.browser.webkit = !0, 
    jQuery.browser.chrome = !0, jQuery.browser.name = "Chrome", jQuery.browser.fullVersion = nAgt.substring(verOffset + 7)) : -1 != (verOffset = nAgt.indexOf("Safari")) ? (jQuery.browser.webkit = !0, 
    jQuery.browser.safari = !0, jQuery.browser.name = "Safari", jQuery.browser.fullVersion = nAgt.substring(verOffset + 7), 
    -1 != (verOffset = nAgt.indexOf("Version")) && (jQuery.browser.fullVersion = nAgt.substring(verOffset + 8))) : -1 != (verOffset = nAgt.indexOf("AppleWebkit")) ? (jQuery.browser.webkit = !0, 
    jQuery.browser.name = "Safari", jQuery.browser.fullVersion = nAgt.substring(verOffset + 7), 
    -1 != (verOffset = nAgt.indexOf("Version")) && (jQuery.browser.fullVersion = nAgt.substring(verOffset + 8))) : -1 != (verOffset = nAgt.indexOf("Firefox")) ? (jQuery.browser.mozilla = !0, 
    jQuery.browser.name = "Firefox", jQuery.browser.fullVersion = nAgt.substring(verOffset + 8)) : (nameOffset = nAgt.lastIndexOf(" ") + 1) < (verOffset = nAgt.lastIndexOf("/")) && (jQuery.browser.name = nAgt.substring(nameOffset, verOffset), 
    jQuery.browser.fullVersion = nAgt.substring(verOffset + 1), jQuery.browser.name.toLowerCase() == jQuery.browser.name.toUpperCase() && (jQuery.browser.name = navigator.appName));
    -1 != (ix = jQuery.browser.fullVersion.indexOf(";")) && (jQuery.browser.fullVersion = jQuery.browser.fullVersion.substring(0, ix)), 
    -1 != (ix = jQuery.browser.fullVersion.indexOf(" ")) && (jQuery.browser.fullVersion = jQuery.browser.fullVersion.substring(0, ix)), 
    jQuery.browser.majorVersion = parseInt("" + jQuery.browser.fullVersion, 10), isNaN(jQuery.browser.majorVersion) && (jQuery.browser.fullVersion = "" + parseFloat(navigator.appVersion), 
    jQuery.browser.majorVersion = parseInt(navigator.appVersion, 10)), jQuery.browser.version = jQuery.browser.majorVersion;
}

jQuery.browser.android = /Android/i.test(nAgt), jQuery.browser.blackberry = /BlackBerry|BB|PlayBook/i.test(nAgt), 
jQuery.browser.ios = /iPhone|iPad|iPod|webOS/i.test(nAgt), jQuery.browser.operaMobile = /Opera Mini/i.test(nAgt), 
jQuery.browser.windowsMobile = /IEMobile|Windows Phone/i.test(nAgt), jQuery.browser.kindle = /Kindle|Silk/i.test(nAgt), 
jQuery.browser.mobile = jQuery.browser.android || jQuery.browser.blackberry || jQuery.browser.ios || jQuery.browser.windowsMobile || jQuery.browser.operaMobile || jQuery.browser.kindle, 
jQuery.isMobile = jQuery.browser.mobile, jQuery.isAndroidDefault = jQuery.browser.android && !/chrome/i.test(nAgt), 
!function(a) {
    /iphone|ipod|ipad|android|ie|blackberry|fennec/.test(navigator.userAgent.toLowerCase());
    var b = "ontouchstart" in window || window.navigator && window.navigator.msPointerEnabled && window.MSGesture || window.DocumentTouch && document instanceof DocumentTouch || !1;
    a.simpleSlider = {
        defaults: {
            initialval: 0,
            scale: 100,
            orientation: "h",
            readonly: !1,
            callback: !1
        },
        events: {
            start: b ? "touchstart" : "mousedown",
            end: b ? "touchend" : "mouseup",
            move: b ? "touchmove" : "mousemove"
        },
        init: function(c) {
            return this.each(function() {
                var d = this, e = a(d);
                e.addClass("simpleSlider"), d.opt = {}, a.extend(d.opt, a.simpleSlider.defaults, c), 
                a.extend(d.opt, e.data());
                var f = "h" == d.opt.orientation ? "horizontal" : "vertical", g = a("<div/>").addClass("level").addClass(f);
                e.prepend(g), d.level = g, e.css({
                    cursor: "default"
                }), "auto" == d.opt.scale && (d.opt.scale = a(d).outerWidth()), e.updateSliderVal(), 
                d.opt.readonly || (e.on(a.simpleSlider.events.start, function(a) {
                    b && (a = a.changedTouches[0]), d.canSlide = !0, e.updateSliderVal(a), e.css({
                        cursor: "col-resize"
                    }), a.preventDefault(), a.stopPropagation();
                }), a(document).on(a.simpleSlider.events.move, function(c) {
                    b && (c = c.changedTouches[0]), d.canSlide && (a(document).css({
                        cursor: "default"
                    }), e.updateSliderVal(c), c.preventDefault(), c.stopPropagation());
                }).on(a.simpleSlider.events.end, function() {
                    a(document).css({
                        cursor: "auto"
                    }), d.canSlide = !1, e.css({
                        cursor: "auto"
                    });
                }));
            });
        },
        updateSliderVal: function(b) {
            function c(a, b) {
                return Math.floor(100 * a / b);
            }
            var d = this, e = d.get(0);
            e.opt.initialval = "number" == typeof e.opt.initialval ? e.opt.initialval : e.opt.initialval(e);
            var f = a(e).outerWidth(), g = a(e).outerHeight();
            e.x = "object" == typeof b ? b.clientX + document.body.scrollLeft - d.offset().left : "number" == typeof b ? b * f / e.opt.scale : e.opt.initialval * f / e.opt.scale, 
            e.y = "object" == typeof b ? b.clientY + document.body.scrollTop - d.offset().top : "number" == typeof b ? (e.opt.scale - e.opt.initialval - b) * g / e.opt.scale : e.opt.initialval * g / e.opt.scale, 
            e.y = d.outerHeight() - e.y, e.scaleX = e.x * e.opt.scale / f, e.scaleY = e.y * e.opt.scale / g, 
            e.outOfRangeX = e.scaleX > e.opt.scale ? e.scaleX - e.opt.scale : e.scaleX < 0 ? e.scaleX : 0, 
            e.outOfRangeY = e.scaleY > e.opt.scale ? e.scaleY - e.opt.scale : e.scaleY < 0 ? e.scaleY : 0, 
            e.outOfRange = "h" == e.opt.orientation ? e.outOfRangeX : e.outOfRangeY, e.value = "undefined" != typeof b ? "h" == e.opt.orientation ? e.x >= d.outerWidth() ? e.opt.scale : e.x <= 0 ? 0 : e.scaleX : e.y >= d.outerHeight() ? e.opt.scale : e.y <= 0 ? 0 : e.scaleY : "h" == e.opt.orientation ? e.scaleX : e.scaleY, 
            "h" == e.opt.orientation ? e.level.width(c(e.x, f) + "%") : e.level.height(c(e.y, g)), 
            "function" == typeof e.opt.callback && e.opt.callback(e);
        }
    }, a.fn.simpleSlider = a.simpleSlider.init, a.fn.updateSliderVal = a.simpleSlider.updateSliderVal;
}(jQuery), !function(a) {
    a.mbCookie = {
        set: function(a, b, c, d) {
            b = JSON.stringify(b), c || (c = 7), d = d ? "; domain=" + d : "";
            var e, f = new Date();
            f.setTime(f.getTime() + 864e5 * c), e = "; expires=" + f.toGMTString(), document.cookie = a + "=" + b + e + "; path=/" + d;
        },
        get: function(a) {
            for (var b = a + "=", c = document.cookie.split(";"), d = 0; d < c.length; d++) {
                for (var e = c[d]; " " == e.charAt(0); ) e = e.substring(1, e.length);
                if (0 == e.indexOf(b)) return JSON.parse(e.substring(b.length, e.length));
            }
            return null;
        },
        remove: function(b) {
            a.mbCookie.set(b, "", -1);
        }
    }, a.mbStorage = {
        set: function(a, b) {
            b = JSON.stringify(b), localStorage.setItem(a, b);
        },
        get: function(a) {
            return localStorage[a] ? JSON.parse(localStorage[a]) : null;
        },
        remove: function(a) {
            a ? localStorage.removeItem(a) : localStorage.clear();
        }
    };
}(jQuery), !function(a) {
    function b() {}
    function c(a) {
        function c(b) {
            b.prototype.option || (b.prototype.option = function(b) {
                a.isPlainObject(b) && (this.options = a.extend(!0, this.options, b));
            });
        }
        function e(b, c) {
            a.fn[b] = function(e) {
                if ("string" == typeof e) {
                    for (var g = d.call(arguments, 1), h = 0, i = this.length; i > h; h++) {
                        var j = this[h], k = a.data(j, b);
                        if (k) if (a.isFunction(k[e]) && "_" !== e.charAt(0)) {
                            var l = k[e].apply(k, g);
                            if (void 0 !== l) return l;
                        } else f("no such method '" + e + "' for " + b + " instance"); else f("cannot call methods on " + b + " prior to initialization; attempted to call '" + e + "'");
                    }
                    return this;
                }
                return this.each(function() {
                    var d = a.data(this, b);
                    d ? (d.option(e), d._init()) : (d = new c(this, e), a.data(this, b, d));
                });
            };
        }
        if (a) {
            var f = "undefined" == typeof console ? b : function(a) {
                console.error(a);
            };
            return a.bridget = function(a, b) {
                c(b), e(a, b);
            }, a.bridget;
        }
    }
    var d = Array.prototype.slice;
    "function" == typeof define && define.amd ? define("jquery-bridget/jquery.bridget", [ "jquery" ], c) : c("object" == typeof exports ? require("jquery") : a.jQuery);
}(window), function(a) {
    function b(b) {
        var c = a.event;
        return c.target = c.target || c.srcElement || b, c;
    }
    var c = document.documentElement, d = function() {};
    c.addEventListener ? d = function(a, b, c) {
        a.addEventListener(b, c, !1);
    } : c.attachEvent && (d = function(a, c, d) {
        a[c + d] = d.handleEvent ? function() {
            var c = b(a);
            d.handleEvent.call(d, c);
        } : function() {
            var c = b(a);
            d.call(a, c);
        }, a.attachEvent("on" + c, a[c + d]);
    });
    var e = function() {};
    c.removeEventListener ? e = function(a, b, c) {
        a.removeEventListener(b, c, !1);
    } : c.detachEvent && (e = function(a, b, c) {
        a.detachEvent("on" + b, a[b + c]);
        try {
            delete a[b + c];
        } catch (d) {
            a[b + c] = void 0;
        }
    });
    var f = {
        bind: d,
        unbind: e
    };
    "function" == typeof define && define.amd ? define("eventie/eventie", f) : "object" == typeof exports ? module.exports = f : a.eventie = f;
}(window), function() {
    function a() {}
    function b(a, b) {
        for (var c = a.length; c--; ) if (a[c].listener === b) return c;
        return -1;
    }
    function c(a) {
        return function() {
            return this[a].apply(this, arguments);
        };
    }
    var d = a.prototype, e = this, f = e.EventEmitter;
    d.getListeners = function(a) {
        var b, c, d = this._getEvents();
        if (a instanceof RegExp) {
            b = {};
            for (c in d) d.hasOwnProperty(c) && a.test(c) && (b[c] = d[c]);
        } else b = d[a] || (d[a] = []);
        return b;
    }, d.flattenListeners = function(a) {
        var b, c = [];
        for (b = 0; b < a.length; b += 1) c.push(a[b].listener);
        return c;
    }, d.getListenersAsObject = function(a) {
        var b, c = this.getListeners(a);
        return c instanceof Array && (b = {}, b[a] = c), b || c;
    }, d.addListener = function(a, c) {
        var d, e = this.getListenersAsObject(a), f = "object" == typeof c;
        for (d in e) e.hasOwnProperty(d) && -1 === b(e[d], c) && e[d].push(f ? c : {
            listener: c,
            once: !1
        });
        return this;
    }, d.on = c("addListener"), d.addOnceListener = function(a, b) {
        return this.addListener(a, {
            listener: b,
            once: !0
        });
    }, d.once = c("addOnceListener"), d.defineEvent = function(a) {
        return this.getListeners(a), this;
    }, d.defineEvents = function(a) {
        for (var b = 0; b < a.length; b += 1) this.defineEvent(a[b]);
        return this;
    }, d.removeListener = function(a, c) {
        var d, e, f = this.getListenersAsObject(a);
        for (e in f) f.hasOwnProperty(e) && (d = b(f[e], c), -1 !== d && f[e].splice(d, 1));
        return this;
    }, d.off = c("removeListener"), d.addListeners = function(a, b) {
        return this.manipulateListeners(!1, a, b);
    }, d.removeListeners = function(a, b) {
        return this.manipulateListeners(!0, a, b);
    }, d.manipulateListeners = function(a, b, c) {
        var d, e, f = a ? this.removeListener : this.addListener, g = a ? this.removeListeners : this.addListeners;
        if ("object" != typeof b || b instanceof RegExp) for (d = c.length; d--; ) f.call(this, b, c[d]); else for (d in b) b.hasOwnProperty(d) && (e = b[d]) && ("function" == typeof e ? f.call(this, d, e) : g.call(this, d, e));
        return this;
    }, d.removeEvent = function(a) {
        var b, c = typeof a, d = this._getEvents();
        if ("string" === c) delete d[a]; else if (a instanceof RegExp) for (b in d) d.hasOwnProperty(b) && a.test(b) && delete d[b]; else delete this._events;
        return this;
    }, d.removeAllListeners = c("removeEvent"), d.emitEvent = function(a, b) {
        var c, d, e, f, g = this.getListenersAsObject(a);
        for (e in g) if (g.hasOwnProperty(e)) for (d = g[e].length; d--; ) c = g[e][d], 
        c.once === !0 && this.removeListener(a, c.listener), f = c.listener.apply(this, b || []), 
        f === this._getOnceReturnValue() && this.removeListener(a, c.listener);
        return this;
    }, d.trigger = c("emitEvent"), d.emit = function(a) {
        var b = Array.prototype.slice.call(arguments, 1);
        return this.emitEvent(a, b);
    }, d.setOnceReturnValue = function(a) {
        return this._onceReturnValue = a, this;
    }, d._getOnceReturnValue = function() {
        return !this.hasOwnProperty("_onceReturnValue") || this._onceReturnValue;
    }, d._getEvents = function() {
        return this._events || (this._events = {});
    }, a.noConflict = function() {
        return e.EventEmitter = f, a;
    }, "function" == typeof define && define.amd ? define("eventEmitter/EventEmitter", [], function() {
        return a;
    }) : "object" == typeof module && module.exports ? module.exports = a : e.EventEmitter = a;
}.call(this), function(a) {
    function b(a) {
        if (a) {
            if ("string" == typeof d[a]) return a;
            a = a.charAt(0).toUpperCase() + a.slice(1);
            for (var b, e = 0, f = c.length; f > e; e++) if (b = c[e] + a, "string" == typeof d[b]) return b;
        }
    }
    var c = "Webkit Moz ms Ms O".split(" "), d = document.documentElement.style;
    "function" == typeof define && define.amd ? define("get-style-property/get-style-property", [], function() {
        return b;
    }) : "object" == typeof exports ? module.exports = b : a.getStyleProperty = b;
}(window), function(a) {
    function b(a) {
        var b = parseFloat(a), c = -1 === a.indexOf("%") && !isNaN(b);
        return c && b;
    }
    function c() {}
    function d() {
        for (var a = {
            width: 0,
            height: 0,
            innerWidth: 0,
            innerHeight: 0,
            outerWidth: 0,
            outerHeight: 0
        }, b = 0, c = g.length; c > b; b++) {
            var d = g[b];
            a[d] = 0;
        }
        return a;
    }
    function e(c) {
        function e() {
            if (!m) {
                m = !0;
                var d = a.getComputedStyle;
                if (j = function() {
                    var a = d ? function(a) {
                        return d(a, null);
                    } : function(a) {
                        return a.currentStyle;
                    };
                    return function(b) {
                        var c = a(b);
                        return c || f("Style returned " + c + ". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"), 
                        c;
                    };
                }(), k = c("boxSizing")) {
                    var e = document.createElement("div");
                    e.style.width = "200px", e.style.padding = "1px 2px 3px 4px", e.style.borderStyle = "solid", 
                    e.style.borderWidth = "1px 2px 3px 4px", e.style[k] = "border-box";
                    var g = document.body || document.documentElement;
                    g.appendChild(e);
                    var h = j(e);
                    l = 200 === b(h.width), g.removeChild(e);
                }
            }
        }
        function h(a) {
            if (e(), "string" == typeof a && (a = document.querySelector(a)), a && "object" == typeof a && a.nodeType) {
                var c = j(a);
                if ("none" === c.display) return d();
                var f = {};
                f.width = a.offsetWidth, f.height = a.offsetHeight;
                for (var h = f.isBorderBox = !(!k || !c[k] || "border-box" !== c[k]), m = 0, n = g.length; n > m; m++) {
                    var o = g[m], p = c[o];
                    p = i(a, p);
                    var q = parseFloat(p);
                    f[o] = isNaN(q) ? 0 : q;
                }
                var r = f.paddingLeft + f.paddingRight, s = f.paddingTop + f.paddingBottom, t = f.marginLeft + f.marginRight, u = f.marginTop + f.marginBottom, v = f.borderLeftWidth + f.borderRightWidth, w = f.borderTopWidth + f.borderBottomWidth, x = h && l, y = b(c.width);
                y !== !1 && (f.width = y + (x ? 0 : r + v));
                var z = b(c.height);
                return z !== !1 && (f.height = z + (x ? 0 : s + w)), f.innerWidth = f.width - (r + v), 
                f.innerHeight = f.height - (s + w), f.outerWidth = f.width + t, f.outerHeight = f.height + u, 
                f;
            }
        }
        function i(b, c) {
            if (a.getComputedStyle || -1 === c.indexOf("%")) return c;
            var d = b.style, e = d.left, f = b.runtimeStyle, g = f && f.left;
            return g && (f.left = b.currentStyle.left), d.left = c, c = d.pixelLeft, d.left = e, 
            g && (f.left = g), c;
        }
        var j, k, l, m = !1;
        return h;
    }
    var f = "undefined" == typeof console ? c : function(a) {
        console.error(a);
    }, g = [ "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth" ];
    "function" == typeof define && define.amd ? define("get-size/get-size", [ "get-style-property/get-style-property" ], e) : "object" == typeof exports ? module.exports = e(require("desandro-get-style-property")) : a.getSize = e(a.getStyleProperty);
}(window), function(a) {
    function b(a) {
        "function" == typeof a && (b.isReady ? a() : g.push(a));
    }
    function c(a) {
        var c = "readystatechange" === a.type && "complete" !== f.readyState;
        b.isReady || c || d();
    }
    function d() {
        b.isReady = !0;
        for (var a = 0, c = g.length; c > a; a++) {
            var d = g[a];
            d();
        }
    }
    function e(e) {
        return "complete" === f.readyState ? d() : (e.bind(f, "DOMContentLoaded", c), e.bind(f, "readystatechange", c), 
        e.bind(a, "load", c)), b;
    }
    var f = a.document, g = [];
    b.isReady = !1, "function" == typeof define && define.amd ? define("doc-ready/doc-ready", [ "eventie/eventie" ], e) : "object" == typeof exports ? module.exports = e(require("eventie")) : a.docReady = e(a.eventie);
}(window), function(a) {
    function b(a, b) {
        return a[g](b);
    }
    function c(a) {
        if (!a.parentNode) {
            var b = document.createDocumentFragment();
            b.appendChild(a);
        }
    }
    function d(a, b) {
        c(a);
        for (var d = a.parentNode.querySelectorAll(b), e = 0, f = d.length; f > e; e++) if (d[e] === a) return !0;
        return !1;
    }
    function e(a, d) {
        return c(a), b(a, d);
    }
    var f, g = function() {
        if (a.matches) return "matches";
        if (a.matchesSelector) return "matchesSelector";
        for (var b = [ "webkit", "moz", "ms", "o" ], c = 0, d = b.length; d > c; c++) {
            var e = b[c], f = e + "MatchesSelector";
            if (a[f]) return f;
        }
    }();
    if (g) {
        var h = document.createElement("div"), i = b(h, "div");
        f = i ? b : e;
    } else f = d;
    "function" == typeof define && define.amd ? define("matches-selector/matches-selector", [], function() {
        return f;
    }) : "object" == typeof exports ? module.exports = f : window.matchesSelector = f;
}(Element.prototype), function(a, b) {
    "function" == typeof define && define.amd ? define("fizzy-ui-utils/utils", [ "doc-ready/doc-ready", "matches-selector/matches-selector" ], function(c, d) {
        return b(a, c, d);
    }) : "object" == typeof exports ? module.exports = b(a, require("doc-ready"), require("desandro-matches-selector")) : a.fizzyUIUtils = b(a, a.docReady, a.matchesSelector);
}(window, function(a, b, c) {
    var d = {};
    d.extend = function(a, b) {
        for (var c in b) a[c] = b[c];
        return a;
    }, d.modulo = function(a, b) {
        return (a % b + b) % b;
    };
    var e = Object.prototype.toString;
    d.isArray = function(a) {
        return "[object Array]" == e.call(a);
    }, d.makeArray = function(a) {
        var b = [];
        if (d.isArray(a)) b = a; else if (a && "number" == typeof a.length) for (var c = 0, e = a.length; e > c; c++) b.push(a[c]); else b.push(a);
        return b;
    }, d.indexOf = Array.prototype.indexOf ? function(a, b) {
        return a.indexOf(b);
    } : function(a, b) {
        for (var c = 0, d = a.length; d > c; c++) if (a[c] === b) return c;
        return -1;
    }, d.removeFrom = function(a, b) {
        var c = d.indexOf(a, b);
        -1 != c && a.splice(c, 1);
    }, d.isElement = "function" == typeof HTMLElement || "object" == typeof HTMLElement ? function(a) {
        return a instanceof HTMLElement;
    } : function(a) {
        return a && "object" == typeof a && 1 == a.nodeType && "string" == typeof a.nodeName;
    }, d.setText = function() {
        function a(a, c) {
            b = b || (void 0 !== document.documentElement.textContent ? "textContent" : "innerText"), 
            a[b] = c;
        }
        var b;
        return a;
    }(), d.getParent = function(a, b) {
        for (;a != document.body; ) if (a = a.parentNode, c(a, b)) return a;
    }, d.getQueryElement = function(a) {
        return "string" == typeof a ? document.querySelector(a) : a;
    }, d.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, d.filterFindElements = function(a, b) {
        a = d.makeArray(a);
        for (var e = [], f = 0, g = a.length; g > f; f++) {
            var h = a[f];
            if (d.isElement(h)) if (b) {
                c(h, b) && e.push(h);
                for (var i = h.querySelectorAll(b), j = 0, k = i.length; k > j; j++) e.push(i[j]);
            } else e.push(h);
        }
        return e;
    }, d.debounceMethod = function(a, b, c) {
        var d = a.prototype[b], e = b + "Timeout";
        a.prototype[b] = function() {
            var a = this[e];
            a && clearTimeout(a);
            var b = arguments, f = this;
            this[e] = setTimeout(function() {
                d.apply(f, b), delete f[e];
            }, c || 100);
        };
    }, d.toDashed = function(a) {
        return a.replace(/(.)([A-Z])/g, function(a, b, c) {
            return b + "-" + c;
        }).toLowerCase();
    };
    var f = a.console;
    return d.htmlInit = function(c, e) {
        b(function() {
            for (var b = d.toDashed(e), g = document.querySelectorAll(".js-" + b), h = "data-" + b + "-options", i = 0, j = g.length; j > i; i++) {
                var k, l = g[i], m = l.getAttribute(h);
                try {
                    k = m && JSON.parse(m);
                } catch (a) {
                    f && f.error("Error parsing " + h + " on " + l.nodeName.toLowerCase() + (l.id ? "#" + l.id : "") + ": " + a);
                    continue;
                }
                var n = new c(l, k), o = a.jQuery;
                o && o.data(l, e, n);
            }
        });
    }, d;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("outlayer/item", [ "eventEmitter/EventEmitter", "get-size/get-size", "get-style-property/get-style-property", "fizzy-ui-utils/utils" ], function(c, d, e, f) {
        return b(a, c, d, e, f);
    }) : "object" == typeof exports ? module.exports = b(a, require("wolfy87-eventemitter"), require("get-size"), require("desandro-get-style-property"), require("fizzy-ui-utils")) : (a.Outlayer = {}, 
    a.Outlayer.Item = b(a, a.EventEmitter, a.getSize, a.getStyleProperty, a.fizzyUIUtils));
}(window, function(a, b, c, d, e) {
    function f(a) {
        for (var b in a) return !1;
        return b = null, !0;
    }
    function g(a, b) {
        a && (this.element = a, this.layout = b, this.position = {
            x: 0,
            y: 0
        }, this._create());
    }
    function h(a) {
        return a.replace(/([A-Z])/g, function(a) {
            return "-" + a.toLowerCase();
        });
    }
    var i = a.getComputedStyle, j = i ? function(a) {
        return i(a, null);
    } : function(a) {
        return a.currentStyle;
    }, k = d("transition"), l = d("transform"), m = k && l, n = !!d("perspective"), o = {
        WebkitTransition: "webkitTransitionEnd",
        MozTransition: "transitionend",
        OTransition: "otransitionend",
        transition: "transitionend"
    }[k], p = [ "transform", "transition", "transitionDuration", "transitionProperty" ], q = function() {
        for (var a = {}, b = 0, c = p.length; c > b; b++) {
            var e = p[b], f = d(e);
            f && f !== e && (a[e] = f);
        }
        return a;
    }();
    e.extend(g.prototype, b.prototype), g.prototype._create = function() {
        this._transn = {
            ingProperties: {},
            clean: {},
            onEnd: {}
        }, this.css({
            position: "absolute"
        });
    }, g.prototype.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, g.prototype.getSize = function() {
        this.size = c(this.element);
    }, g.prototype.css = function(a) {
        var b = this.element.style;
        for (var c in a) {
            var d = q[c] || c;
            b[d] = a[c];
        }
    }, g.prototype.getPosition = function() {
        var a = j(this.element), b = this.layout.options, c = b.isOriginLeft, d = b.isOriginTop, e = a[c ? "left" : "right"], f = a[d ? "top" : "bottom"], g = this.layout.size, h = -1 != e.indexOf("%") ? parseFloat(e) / 100 * g.width : parseInt(e, 10), i = -1 != f.indexOf("%") ? parseFloat(f) / 100 * g.height : parseInt(f, 10);
        h = isNaN(h) ? 0 : h, i = isNaN(i) ? 0 : i, h -= c ? g.paddingLeft : g.paddingRight, 
        i -= d ? g.paddingTop : g.paddingBottom, this.position.x = h, this.position.y = i;
    }, g.prototype.layoutPosition = function() {
        var a = this.layout.size, b = this.layout.options, c = {}, d = b.isOriginLeft ? "paddingLeft" : "paddingRight", e = b.isOriginLeft ? "left" : "right", f = b.isOriginLeft ? "right" : "left", g = this.position.x + a[d];
        c[e] = this.getXValue(g), c[f] = "";
        var h = b.isOriginTop ? "paddingTop" : "paddingBottom", i = b.isOriginTop ? "top" : "bottom", j = b.isOriginTop ? "bottom" : "top", k = this.position.y + a[h];
        c[i] = this.getYValue(k), c[j] = "", this.css(c), this.emitEvent("layout", [ this ]);
    }, g.prototype.getXValue = function(a) {
        var b = this.layout.options;
        return b.percentPosition && !b.isHorizontal ? a / this.layout.size.width * 100 + "%" : a + "px";
    }, g.prototype.getYValue = function(a) {
        var b = this.layout.options;
        return b.percentPosition && b.isHorizontal ? a / this.layout.size.height * 100 + "%" : a + "px";
    }, g.prototype._transitionTo = function(a, b) {
        this.getPosition();
        var c = this.position.x, d = this.position.y, e = parseInt(a, 10), f = parseInt(b, 10), g = e === this.position.x && f === this.position.y;
        if (this.setPosition(a, b), g && !this.isTransitioning) return void this.layoutPosition();
        var h = a - c, i = b - d, j = {};
        j.transform = this.getTranslate(h, i), this.transition({
            to: j,
            onTransitionEnd: {
                transform: this.layoutPosition
            },
            isCleaning: !0
        });
    }, g.prototype.getTranslate = function(a, b) {
        var c = this.layout.options;
        return a = c.isOriginLeft ? a : -a, b = c.isOriginTop ? b : -b, n ? "translate3d(" + a + "px, " + b + "px, 0)" : "translate(" + a + "px, " + b + "px)";
    }, g.prototype.goTo = function(a, b) {
        this.setPosition(a, b), this.layoutPosition();
    }, g.prototype.moveTo = m ? g.prototype._transitionTo : g.prototype.goTo, g.prototype.setPosition = function(a, b) {
        this.position.x = parseInt(a, 10), this.position.y = parseInt(b, 10);
    }, g.prototype._nonTransition = function(a) {
        this.css(a.to), a.isCleaning && this._removeStyles(a.to);
        for (var b in a.onTransitionEnd) a.onTransitionEnd[b].call(this);
    }, g.prototype._transition = function(a) {
        if (!parseFloat(this.layout.options.transitionDuration)) return void this._nonTransition(a);
        var b = this._transn;
        for (var c in a.onTransitionEnd) b.onEnd[c] = a.onTransitionEnd[c];
        for (c in a.to) b.ingProperties[c] = !0, a.isCleaning && (b.clean[c] = !0);
        if (a.from) {
            this.css(a.from);
            var d = this.element.offsetHeight;
            d = null;
        }
        this.enableTransition(a.to), this.css(a.to), this.isTransitioning = !0;
    };
    var r = "opacity," + h(q.transform || "transform");
    g.prototype.enableTransition = function() {
        this.isTransitioning || (this.css({
            transitionProperty: r,
            transitionDuration: this.layout.options.transitionDuration
        }), this.element.addEventListener(o, this, !1));
    }, g.prototype.transition = g.prototype[k ? "_transition" : "_nonTransition"], g.prototype.onwebkitTransitionEnd = function(a) {
        this.ontransitionend(a);
    }, g.prototype.onotransitionend = function(a) {
        this.ontransitionend(a);
    };
    var s = {
        "-webkit-transform": "transform",
        "-moz-transform": "transform",
        "-o-transform": "transform"
    };
    g.prototype.ontransitionend = function(a) {
        if (a.target === this.element) {
            var b = this._transn, c = s[a.propertyName] || a.propertyName;
            if (delete b.ingProperties[c], f(b.ingProperties) && this.disableTransition(), c in b.clean && (this.element.style[a.propertyName] = "", 
            delete b.clean[c]), c in b.onEnd) {
                var d = b.onEnd[c];
                d.call(this), delete b.onEnd[c];
            }
            this.emitEvent("transitionEnd", [ this ]);
        }
    }, g.prototype.disableTransition = function() {
        this.removeTransitionStyles(), this.element.removeEventListener(o, this, !1), this.isTransitioning = !1;
    }, g.prototype._removeStyles = function(a) {
        var b = {};
        for (var c in a) b[c] = "";
        this.css(b);
    };
    var t = {
        transitionProperty: "",
        transitionDuration: ""
    };
    return g.prototype.removeTransitionStyles = function() {
        this.css(t);
    }, g.prototype.removeElem = function() {
        this.element.parentNode.removeChild(this.element), this.css({
            display: ""
        }), this.emitEvent("remove", [ this ]);
    }, g.prototype.remove = function() {
        if (!k || !parseFloat(this.layout.options.transitionDuration)) return void this.removeElem();
        var a = this;
        this.once("transitionEnd", function() {
            a.removeElem();
        }), this.hide();
    }, g.prototype.reveal = function() {
        delete this.isHidden, this.css({
            display: ""
        });
        var a = this.layout.options, b = {}, c = this.getHideRevealTransitionEndProperty("visibleStyle");
        b[c] = this.onRevealTransitionEnd, this.transition({
            from: a.hiddenStyle,
            to: a.visibleStyle,
            isCleaning: !0,
            onTransitionEnd: b
        });
    }, g.prototype.onRevealTransitionEnd = function() {
        this.isHidden || this.emitEvent("reveal");
    }, g.prototype.getHideRevealTransitionEndProperty = function(a) {
        var b = this.layout.options[a];
        if (b.opacity) return "opacity";
        for (var c in b) return c;
    }, g.prototype.hide = function() {
        this.isHidden = !0, this.css({
            display: ""
        });
        var a = this.layout.options, b = {}, c = this.getHideRevealTransitionEndProperty("hiddenStyle");
        b[c] = this.onHideTransitionEnd, this.transition({
            from: a.visibleStyle,
            to: a.hiddenStyle,
            isCleaning: !0,
            onTransitionEnd: b
        });
    }, g.prototype.onHideTransitionEnd = function() {
        this.isHidden && (this.css({
            display: "none"
        }), this.emitEvent("hide"));
    }, g.prototype.destroy = function() {
        this.css({
            position: "",
            left: "",
            right: "",
            top: "",
            bottom: "",
            transition: "",
            transform: ""
        });
    }, g;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("outlayer/outlayer", [ "eventie/eventie", "eventEmitter/EventEmitter", "get-size/get-size", "fizzy-ui-utils/utils", "./item" ], function(c, d, e, f, g) {
        return b(a, c, d, e, f, g);
    }) : "object" == typeof exports ? module.exports = b(a, require("eventie"), require("wolfy87-eventemitter"), require("get-size"), require("fizzy-ui-utils"), require("./item")) : a.Outlayer = b(a, a.eventie, a.EventEmitter, a.getSize, a.fizzyUIUtils, a.Outlayer.Item);
}(window, function(a, b, c, d, e, f) {
    function g(a, b) {
        var c = e.getQueryElement(a);
        if (!c) return void (h && h.error("Bad element for " + this.constructor.namespace + ": " + (c || a)));
        this.element = c, i && (this.$element = i(this.element)), this.options = e.extend({}, this.constructor.defaults), 
        this.option(b);
        var d = ++k;
        this.element.outlayerGUID = d, l[d] = this, this._create(), this.options.isInitLayout && this.layout();
    }
    var h = a.console, i = a.jQuery, j = function() {}, k = 0, l = {};
    return g.namespace = "outlayer", g.Item = f, g.defaults = {
        containerStyle: {
            position: "relative"
        },
        isInitLayout: !0,
        isOriginLeft: !0,
        isOriginTop: !0,
        isResizeBound: !0,
        isResizingContainer: !0,
        transitionDuration: "0.4s",
        hiddenStyle: {
            opacity: 0,
            transform: "scale(0.001)"
        },
        visibleStyle: {
            opacity: 1,
            transform: "scale(1)"
        }
    }, e.extend(g.prototype, c.prototype), g.prototype.option = function(a) {
        e.extend(this.options, a);
    }, g.prototype._create = function() {
        this.reloadItems(), this.stamps = [], this.stamp(this.options.stamp), e.extend(this.element.style, this.options.containerStyle), 
        this.options.isResizeBound && this.bindResize();
    }, g.prototype.reloadItems = function() {
        this.items = this._itemize(this.element.children);
    }, g.prototype._itemize = function(a) {
        for (var b = this._filterFindItemElements(a), c = this.constructor.Item, d = [], e = 0, f = b.length; f > e; e++) {
            var g = b[e], h = new c(g, this);
            d.push(h);
        }
        return d;
    }, g.prototype._filterFindItemElements = function(a) {
        return e.filterFindElements(a, this.options.itemSelector);
    }, g.prototype.getItemElements = function() {
        for (var a = [], b = 0, c = this.items.length; c > b; b++) a.push(this.items[b].element);
        return a;
    }, g.prototype.layout = function() {
        this._resetLayout(), this._manageStamps();
        var a = void 0 !== this.options.isLayoutInstant ? this.options.isLayoutInstant : !this._isLayoutInited;
        this.layoutItems(this.items, a), this._isLayoutInited = !0;
    }, g.prototype._init = g.prototype.layout, g.prototype._resetLayout = function() {
        this.getSize();
    }, g.prototype.getSize = function() {
        this.size = d(this.element);
    }, g.prototype._getMeasurement = function(a, b) {
        var c, f = this.options[a];
        f ? ("string" == typeof f ? c = this.element.querySelector(f) : e.isElement(f) && (c = f), 
        this[a] = c ? d(c)[b] : f) : this[a] = 0;
    }, g.prototype.layoutItems = function(a, b) {
        a = this._getItemsForLayout(a), this._layoutItems(a, b), this._postLayout();
    }, g.prototype._getItemsForLayout = function(a) {
        for (var b = [], c = 0, d = a.length; d > c; c++) {
            var e = a[c];
            e.isIgnored || b.push(e);
        }
        return b;
    }, g.prototype._layoutItems = function(a, b) {
        if (this._emitCompleteOnItems("layout", a), a && a.length) {
            for (var c = [], d = 0, e = a.length; e > d; d++) {
                var f = a[d], g = this._getItemLayoutPosition(f);
                g.item = f, g.isInstant = b || f.isLayoutInstant, c.push(g);
            }
            this._processLayoutQueue(c);
        }
    }, g.prototype._getItemLayoutPosition = function() {
        return {
            x: 0,
            y: 0
        };
    }, g.prototype._processLayoutQueue = function(a) {
        for (var b = 0, c = a.length; c > b; b++) {
            var d = a[b];
            this._positionItem(d.item, d.x, d.y, d.isInstant);
        }
    }, g.prototype._positionItem = function(a, b, c, d) {
        d ? a.goTo(b, c) : a.moveTo(b, c);
    }, g.prototype._postLayout = function() {
        this.resizeContainer();
    }, g.prototype.resizeContainer = function() {
        if (this.options.isResizingContainer) {
            var a = this._getContainerSize();
            a && (this._setContainerMeasure(a.width, !0), this._setContainerMeasure(a.height, !1));
        }
    }, g.prototype._getContainerSize = j, g.prototype._setContainerMeasure = function(a, b) {
        if (void 0 !== a) {
            var c = this.size;
            c.isBorderBox && (a += b ? c.paddingLeft + c.paddingRight + c.borderLeftWidth + c.borderRightWidth : c.paddingBottom + c.paddingTop + c.borderTopWidth + c.borderBottomWidth), 
            a = Math.max(a, 0), this.element.style[b ? "width" : "height"] = a + "px";
        }
    }, g.prototype._emitCompleteOnItems = function(a, b) {
        function c() {
            e.dispatchEvent(a + "Complete", null, [ b ]);
        }
        function d() {
            g++, g === f && c();
        }
        var e = this, f = b.length;
        if (!b || !f) return void c();
        for (var g = 0, h = 0, i = b.length; i > h; h++) {
            var j = b[h];
            j.once(a, d);
        }
    }, g.prototype.dispatchEvent = function(a, b, c) {
        var d = b ? [ b ].concat(c) : c;
        if (this.emitEvent(a, d), i) if (this.$element = this.$element || i(this.element), 
        b) {
            var e = i.Event(b);
            e.type = a, this.$element.trigger(e, c);
        } else this.$element.trigger(a, c);
    }, g.prototype.ignore = function(a) {
        var b = this.getItem(a);
        b && (b.isIgnored = !0);
    }, g.prototype.unignore = function(a) {
        var b = this.getItem(a);
        b && delete b.isIgnored;
    }, g.prototype.stamp = function(a) {
        if (a = this._find(a)) {
            this.stamps = this.stamps.concat(a);
            for (var b = 0, c = a.length; c > b; b++) {
                var d = a[b];
                this.ignore(d);
            }
        }
    }, g.prototype.unstamp = function(a) {
        if (a = this._find(a)) for (var b = 0, c = a.length; c > b; b++) {
            var d = a[b];
            e.removeFrom(this.stamps, d), this.unignore(d);
        }
    }, g.prototype._find = function(a) {
        return a ? ("string" == typeof a && (a = this.element.querySelectorAll(a)), a = e.makeArray(a)) : void 0;
    }, g.prototype._manageStamps = function() {
        if (this.stamps && this.stamps.length) {
            this._getBoundingRect();
            for (var a = 0, b = this.stamps.length; b > a; a++) {
                var c = this.stamps[a];
                this._manageStamp(c);
            }
        }
    }, g.prototype._getBoundingRect = function() {
        var a = this.element.getBoundingClientRect(), b = this.size;
        this._boundingRect = {
            left: a.left + b.paddingLeft + b.borderLeftWidth,
            top: a.top + b.paddingTop + b.borderTopWidth,
            right: a.right - (b.paddingRight + b.borderRightWidth),
            bottom: a.bottom - (b.paddingBottom + b.borderBottomWidth)
        };
    }, g.prototype._manageStamp = j, g.prototype._getElementOffset = function(a) {
        var b = a.getBoundingClientRect(), c = this._boundingRect, e = d(a), f = {
            left: b.left - c.left - e.marginLeft,
            top: b.top - c.top - e.marginTop,
            right: c.right - b.right - e.marginRight,
            bottom: c.bottom - b.bottom - e.marginBottom
        };
        return f;
    }, g.prototype.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, g.prototype.bindResize = function() {
        this.isResizeBound || (b.bind(a, "resize", this), this.isResizeBound = !0);
    }, g.prototype.unbindResize = function() {
        this.isResizeBound && b.unbind(a, "resize", this), this.isResizeBound = !1;
    }, g.prototype.onresize = function() {
        function a() {
            b.resize(), delete b.resizeTimeout;
        }
        this.resizeTimeout && clearTimeout(this.resizeTimeout);
        var b = this;
        this.resizeTimeout = setTimeout(a, 100);
    }, g.prototype.resize = function() {
        this.isResizeBound && this.needsResizeLayout() && this.layout();
    }, g.prototype.needsResizeLayout = function() {
        var a = d(this.element), b = this.size && a;
        return b && a.innerWidth !== this.size.innerWidth;
    }, g.prototype.addItems = function(a) {
        var b = this._itemize(a);
        return b.length && (this.items = this.items.concat(b)), b;
    }, g.prototype.appended = function(a) {
        var b = this.addItems(a);
        b.length && (this.layoutItems(b, !0), this.reveal(b));
    }, g.prototype.prepended = function(a) {
        var b = this._itemize(a);
        if (b.length) {
            var c = this.items.slice(0);
            this.items = b.concat(c), this._resetLayout(), this._manageStamps(), this.layoutItems(b, !0), 
            this.reveal(b), this.layoutItems(c);
        }
    }, g.prototype.reveal = function(a) {
        this._emitCompleteOnItems("reveal", a);
        for (var b = a && a.length, c = 0; b && b > c; c++) {
            var d = a[c];
            d.reveal();
        }
    }, g.prototype.hide = function(a) {
        this._emitCompleteOnItems("hide", a);
        for (var b = a && a.length, c = 0; b && b > c; c++) {
            var d = a[c];
            d.hide();
        }
    }, g.prototype.revealItemElements = function(a) {
        var b = this.getItems(a);
        this.reveal(b);
    }, g.prototype.hideItemElements = function(a) {
        var b = this.getItems(a);
        this.hide(b);
    }, g.prototype.getItem = function(a) {
        for (var b = 0, c = this.items.length; c > b; b++) {
            var d = this.items[b];
            if (d.element === a) return d;
        }
    }, g.prototype.getItems = function(a) {
        a = e.makeArray(a);
        for (var b = [], c = 0, d = a.length; d > c; c++) {
            var f = a[c], g = this.getItem(f);
            g && b.push(g);
        }
        return b;
    }, g.prototype.remove = function(a) {
        var b = this.getItems(a);
        if (this._emitCompleteOnItems("remove", b), b && b.length) for (var c = 0, d = b.length; d > c; c++) {
            var f = b[c];
            f.remove(), e.removeFrom(this.items, f);
        }
    }, g.prototype.destroy = function() {
        var a = this.element.style;
        a.height = "", a.position = "", a.width = "";
        for (var b = 0, c = this.items.length; c > b; b++) {
            var d = this.items[b];
            d.destroy();
        }
        this.unbindResize();
        var e = this.element.outlayerGUID;
        delete l[e], delete this.element.outlayerGUID, i && i.removeData(this.element, this.constructor.namespace);
    }, g.data = function(a) {
        a = e.getQueryElement(a);
        var b = a && a.outlayerGUID;
        return b && l[b];
    }, g.create = function(a, b) {
        function c() {
            g.apply(this, arguments);
        }
        return Object.create ? c.prototype = Object.create(g.prototype) : e.extend(c.prototype, g.prototype), 
        c.prototype.constructor = c, c.defaults = e.extend({}, g.defaults), e.extend(c.defaults, b), 
        c.prototype.settings = {}, c.namespace = a, c.data = g.data, c.Item = function() {
            f.apply(this, arguments);
        }, c.Item.prototype = new f(), e.htmlInit(c, a), i && i.bridget && i.bridget(a, c), 
        c;
    }, g.Item = f, g;
}), function(a, b) {
    "function" == typeof define && define.amd ? define([ "outlayer/outlayer", "get-size/get-size", "fizzy-ui-utils/utils" ], b) : "object" == typeof exports ? module.exports = b(require("outlayer"), require("get-size"), require("fizzy-ui-utils")) : a.Masonry = b(a.Outlayer, a.getSize, a.fizzyUIUtils);
}(window, function(a, b, c) {
    var d = a.create("masonry");
    return d.prototype._resetLayout = function() {
        this.getSize(), this._getMeasurement("columnWidth", "outerWidth"), this._getMeasurement("gutter", "outerWidth"), 
        this.measureColumns();
        var a = this.cols;
        for (this.colYs = []; a--; ) this.colYs.push(0);
        this.maxY = 0;
    }, d.prototype.measureColumns = function() {
        if (this.getContainerWidth(), !this.columnWidth) {
            var a = this.items[0], c = a && a.element;
            this.columnWidth = c && b(c).outerWidth || this.containerWidth;
        }
        var d = this.columnWidth += this.gutter, e = this.containerWidth + this.gutter, f = e / d, g = d - e % d, h = g && 1 > g ? "round" : "floor";
        f = Math[h](f), this.cols = Math.max(f, 1);
    }, d.prototype.getContainerWidth = function() {
        var a = this.options.isFitWidth ? this.element.parentNode : this.element, c = b(a);
        this.containerWidth = c && c.innerWidth;
    }, d.prototype._getItemLayoutPosition = function(a) {
        a.getSize();
        var b = a.size.outerWidth % this.columnWidth, d = b && 1 > b ? "round" : "ceil", e = Math[d](a.size.outerWidth / this.columnWidth);
        e = Math.min(e, this.cols);
        for (var f = this._getColGroup(e), g = Math.min.apply(Math, f), h = c.indexOf(f, g), i = {
            x: this.columnWidth * h,
            y: g
        }, j = g + a.size.outerHeight, k = this.cols + 1 - f.length, l = 0; k > l; l++) this.colYs[h + l] = j;
        return i;
    }, d.prototype._getColGroup = function(a) {
        if (2 > a) return this.colYs;
        for (var b = [], c = this.cols + 1 - a, d = 0; c > d; d++) {
            var e = this.colYs.slice(d, d + a);
            b[d] = Math.max.apply(Math, e);
        }
        return b;
    }, d.prototype._manageStamp = function(a) {
        var c = b(a), d = this._getElementOffset(a), e = this.options.isOriginLeft ? d.left : d.right, f = e + c.outerWidth, g = Math.floor(e / this.columnWidth);
        g = Math.max(0, g);
        var h = Math.floor(f / this.columnWidth);
        h -= f % this.columnWidth ? 0 : 1, h = Math.min(this.cols - 1, h);
        for (var i = (this.options.isOriginTop ? d.top : d.bottom) + c.outerHeight, j = g; h >= j; j++) this.colYs[j] = Math.max(i, this.colYs[j]);
    }, d.prototype._getContainerSize = function() {
        this.maxY = Math.max.apply(Math, this.colYs);
        var a = {
            height: this.maxY
        };
        return this.options.isFitWidth && (a.width = this._getContainerFitWidth()), a;
    }, d.prototype._getContainerFitWidth = function() {
        for (var a = 0, b = this.cols; --b && 0 === this.colYs[b]; ) a++;
        return (this.cols - a) * this.columnWidth - this.gutter;
    }, d.prototype.needsResizeLayout = function() {
        var a = this.containerWidth;
        return this.getContainerWidth(), a !== this.containerWidth;
    }, d;
}), function() {
    function a() {
        E.keyboardSupport && n("keydown", f);
    }
    function b() {
        if (!I && document.body) {
            I = !0;
            var b = document.body, c = document.documentElement, d = window.innerHeight, e = b.scrollHeight;
            if (J = document.compatMode.indexOf("CSS") >= 0 ? c : b, y = b, a(), top != self) G = !0; else if (e > d && (b.offsetHeight <= d || c.offsetHeight <= d)) {
                var f = document.createElement("div");
                f.style.cssText = "position:absolute; z-index:-10000; top:0; left:0; right:0; height:" + J.scrollHeight + "px", 
                document.body.appendChild(f);
                var g;
                A = function() {
                    g || (g = setTimeout(function() {
                        F || (f.style.height = "0", f.style.height = J.scrollHeight + "px", g = null);
                    }, 500));
                }, setTimeout(A, 10), n("resize", A);
                var h = {
                    attributes: !0,
                    childList: !0,
                    characterData: !1
                };
                if (z = new U(A), z.observe(b, h), J.offsetHeight <= d) {
                    var i = document.createElement("div");
                    i.style.clear = "both", b.appendChild(i);
                }
            }
            E.fixedBackground || F || (b.style.backgroundAttachment = "scroll", c.style.backgroundAttachment = "scroll");
        }
    }
    function c() {
        z && z.disconnect(), o(S, e), o("mousedown", g), o("keydown", f), o("resize", A), 
        o("load", b);
    }
    function d(a, b, c) {
        if (q(b, c), 1 != E.accelerationMax) {
            var d = Date.now(), e = d - P;
            if (e < E.accelerationDelta) {
                var f = (1 + 50 / e) / 2;
                f > 1 && (f = Math.min(f, E.accelerationMax), b *= f, c *= f);
            }
            P = Date.now();
        }
        if (N.push({
            x: b,
            y: c,
            lastX: b < 0 ? .99 : -.99,
            lastY: c < 0 ? .99 : -.99,
            start: Date.now()
        }), !O) {
            var g = a === document.body, h = function(d) {
                for (var e = Date.now(), f = 0, i = 0, j = 0; j < N.length; j++) {
                    var k = N[j], l = e - k.start, m = l >= E.animationTime, n = m ? 1 : l / E.animationTime;
                    E.pulseAlgorithm && (n = w(n));
                    var o = k.x * n - k.lastX >> 0, p = k.y * n - k.lastY >> 0;
                    f += o, i += p, k.lastX += o, k.lastY += p, m && (N.splice(j, 1), j--);
                }
                g ? window.scrollBy(f, i) : (f && (a.scrollLeft += f), i && (a.scrollTop += i)), 
                b || c || (N = []), N.length ? T(h, a, 1e3 / E.frameRate + 1) : O = !1;
            };
            T(h, a, 0), O = !0;
        }
    }
    function e(a) {
        I || b();
        var c = a.target, e = j(c);
        if (!e || a.defaultPrevented || a.ctrlKey) return !0;
        if (p(y, "embed") || p(c, "embed") && /\.pdf/i.test(c.src) || p(y, "object")) return !0;
        var f = -a.wheelDeltaX || a.deltaX || 0, g = -a.wheelDeltaY || a.deltaY || 0;
        return L && (a.wheelDeltaX && s(a.wheelDeltaX, 120) && (f = -120 * (a.wheelDeltaX / Math.abs(a.wheelDeltaX))), 
        a.wheelDeltaY && s(a.wheelDeltaY, 120) && (g = -120 * (a.wheelDeltaY / Math.abs(a.wheelDeltaY)))), 
        f || g || (g = -a.wheelDelta || 0), 1 === a.deltaMode && (f *= 40, g *= 40), !(E.touchpadSupport || !r(g)) || (Math.abs(f) > 1.2 && (f *= E.stepSize / 120), 
        Math.abs(g) > 1.2 && (g *= E.stepSize / 120), d(e, f, g), a.preventDefault(), void h());
    }
    function f(a) {
        var b = a.target, c = a.ctrlKey || a.altKey || a.metaKey || a.shiftKey && a.keyCode !== M.spacebar;
        document.contains(y) || (y = document.activeElement);
        var e = /^(textarea|select|embed|object)$/i, f = /^(button|submit|radio|checkbox|file|color|image)$/i;
        if (e.test(b.nodeName) || p(b, "input") && !f.test(b.type) || p(y, "video") || u(a) || b.isContentEditable || a.defaultPrevented || c) return !0;
        if ((p(b, "button") || p(b, "input") && f.test(b.type)) && a.keyCode === M.spacebar) return !0;
        var g, i = 0, k = 0, l = j(y), m = l.clientHeight;
        switch (l == document.body && (m = window.innerHeight), a.keyCode) {
          case M.up:
            k = -E.arrowScroll;
            break;

          case M.down:
            k = E.arrowScroll;
            break;

          case M.spacebar:
            g = a.shiftKey ? 1 : -1, k = -g * m * .9;
            break;

          case M.pageup:
            k = .9 * -m;
            break;

          case M.pagedown:
            k = .9 * m;
            break;

          case M.home:
            k = -l.scrollTop;
            break;

          case M.end:
            var n = l.scrollHeight - l.scrollTop - m;
            k = n > 0 ? n + 10 : 0;
            break;

          case M.left:
            i = -E.arrowScroll;
            break;

          case M.right:
            i = E.arrowScroll;
            break;

          default:
            return !0;
        }
        d(l, i, k), a.preventDefault(), h();
    }
    function g(a) {
        y = a.target;
    }
    function h() {
        clearTimeout(B), B = setInterval(function() {
            R = {};
        }, 1e3);
    }
    function i(a, b) {
        for (var c = a.length; c--; ) R[Q(a[c])] = b;
        return b;
    }
    function j(a) {
        var b = [], c = document.body, d = J.scrollHeight;
        do {
            var e = R[Q(a)];
            if (e) return i(b, e);
            if (b.push(a), d === a.scrollHeight) {
                var f = l(J) && l(c), g = f || m(J);
                if (G && k(J) || !G && g) return i(b, V());
            } else if (k(a) && m(a)) return i(b, a);
        } while (a = a.parentElement);
    }
    function k(a) {
        return a.clientHeight + 10 < a.scrollHeight;
    }
    function l(a) {
        var b = getComputedStyle(a, "").getPropertyValue("overflow-y");
        return "hidden" !== b;
    }
    function m(a) {
        var b = getComputedStyle(a, "").getPropertyValue("overflow-y");
        return "scroll" === b || "auto" === b;
    }
    function n(a, b) {
        window.addEventListener(a, b, !1);
    }
    function o(a, b) {
        window.removeEventListener(a, b, !1);
    }
    function p(a, b) {
        return (a.nodeName || "").toLowerCase() === b.toLowerCase();
    }
    function q(a, b) {
        a = a > 0 ? 1 : -1, b = b > 0 ? 1 : -1, H.x === a && H.y === b || (H.x = a, H.y = b, 
        N = [], P = 0);
    }
    function r(a) {
        if (a) return K.length || (K = [ a, a, a ]), a = Math.abs(a), K.push(a), K.shift(), 
        clearTimeout(C), C = setTimeout(function() {
            window.localStorage && (localStorage.SS_deltaBuffer = K.join(","));
        }, 1e3), !t(120) && !t(100);
    }
    function s(a, b) {
        return Math.floor(a / b) == a / b;
    }
    function t(a) {
        return s(K[0], a) && s(K[1], a) && s(K[2], a);
    }
    function u(a) {
        var b = a.target, c = !1;
        if (document.URL.indexOf("www.youtube.com/watch") != -1) do if (c = b.classList && b.classList.contains("html5-video-controls")) break; while (b = b.parentNode);
        return c;
    }
    function v(a) {
        var b, c, d;
        return a *= E.pulseScale, a < 1 ? b = a - (1 - Math.exp(-a)) : (c = Math.exp(-1), 
        a -= 1, d = 1 - Math.exp(-a), b = c + d * (1 - c)), b * E.pulseNormalize;
    }
    function w(a) {
        return a >= 1 ? 1 : a <= 0 ? 0 : (1 == E.pulseNormalize && (E.pulseNormalize /= v(1)), 
        v(a));
    }
    function x(a) {
        for (var b in a) D.hasOwnProperty(b) && (E[b] = a[b]);
    }
    var y, z, A, B, C, D = {
        frameRate: 150,
        animationTime: 400,
        stepSize: 100,
        pulseAlgorithm: !0,
        pulseScale: 4,
        pulseNormalize: 1,
        accelerationDelta: 50,
        accelerationMax: 3,
        keyboardSupport: !0,
        arrowScroll: 50,
        touchpadSupport: !1,
        fixedBackground: !0,
        excluded: ""
    }, E = D, F = !1, G = !1, H = {
        x: 0,
        y: 0
    }, I = !1, J = document.documentElement, K = [], L = /^Mac/.test(navigator.platform), M = {
        left: 37,
        up: 38,
        right: 39,
        down: 40,
        spacebar: 32,
        pageup: 33,
        pagedown: 34,
        end: 35,
        home: 36
    }, N = [], O = !1, P = Date.now(), Q = function() {
        var a = 0;
        return function(b) {
            return b.uniqueID || (b.uniqueID = a++);
        };
    }(), R = {};
    window.localStorage && localStorage.SS_deltaBuffer && (K = localStorage.SS_deltaBuffer.split(","));
    var S, T = function() {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(a, b, c) {
            window.setTimeout(a, c || 1e3 / 60);
        };
    }(), U = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver, V = function() {
        var a;
        return function() {
            if (!a) {
                var b = document.createElement("div");
                b.style.cssText = "height:10000px;width:1px;", document.body.appendChild(b);
                var c = document.body.scrollTop;
                document.documentElement.scrollTop;
                window.scrollBy(0, 1), a = document.body.scrollTop != c ? document.body : document.documentElement, 
                window.scrollBy(0, -1), document.body.removeChild(b);
            }
            return a;
        };
    }(), W = window.navigator.userAgent, X = /Edge/.test(W), Y = /chrome/i.test(W) && !X, Z = /safari/i.test(W) && !X, $ = /mobile/i.test(W), _ = (Y || Z) && !$;
    "onwheel" in document.createElement("div") ? S = "wheel" : "onmousewheel" in document.createElement("div") && (S = "mousewheel"), 
    S && _ && (n(S, e), n("mousedown", g), n("load", b)), x.destroy = c, window.SmoothScrollOptions && x(window.SmoothScrollOptions), 
    "object" == typeof exports ? module.exports = x : window.SmoothScroll = x;
}(), function(a) {
    "function" == typeof define && define.amd ? define([ "jquery" ], a) : a(jQuery);
}(function(a, b) {
    "use strict";
    function c(a, b) {
        this.container = a, this.options = b, this.init();
    }
    function d(b, c) {
        this.widget = b, this.options = a.extend({}, c), this.detectService(), this.service && this.init();
    }
    function e(a) {
        function b(a, b) {
            return b.toUpper();
        }
        var c = {}, d = a.data();
        for (var e in d) {
            var f = d[e];
            "yes" === f ? f = !0 : "no" === f && (f = !1), c[e.replace(/-(\w)/g, b)] = f;
        }
        return c;
    }
    function f(a, b) {
        return g(a, b, encodeURIComponent);
    }
    function g(a, b, c) {
        return a.replace(/\{([^\}]+)\}/g, function(a, d) {
            return d in b ? c ? c(b[d]) : b[d] : a;
        });
    }
    function h(a, b) {
        var c = l + a;
        return c + " " + c + "_" + b;
    }
    function i(b, c) {
        function d(g) {
            "keydown" === g.type && 27 !== g.which || a(g.target).closest(b).length || (b.removeClass(m), 
            e.off(f, d), a.isFunction(c) && c());
        }
        var e = a(document), f = "click touchstart keydown";
        e.on(f, d);
    }
    function j(a) {
        var b = 10;
        if (document.documentElement.getBoundingClientRect) {
            var c = parseInt(a.css("left"), 10), d = parseInt(a.css("top"), 10), e = a[0].getBoundingClientRect();
            e.left < b ? a.css("left", b - e.left + c) : e.right > window.innerWidth - b && a.css("left", window.innerWidth - e.right - b + c), 
            e.top < b ? a.css("top", b - e.top + d) : e.bottom > window.innerHeight - b && a.css("top", window.innerHeight - e.bottom - b + d);
        }
        a.addClass(m);
    }
    var k = "social-likes", l = k + "__", m = k + "_opened", n = "https:" === location.protocol ? "https:" : "http:", o = "https:" === n, p = {
        facebook: {
            counterUrl: "https://graph.facebook.com/fql?q=SELECT+total_count+FROM+link_stat+WHERE+url%3D%22{url}%22&callback=?",
            convertNumber: function(a) {
                return a.data[0].total_count;
            },
            popupUrl: "https://www.facebook.com/sharer/sharer.php?u={url}",
            popupWidth: 600,
            popupHeight: 500
        },
        twitter: {
            counterUrl: "https://cdn.api.twitter.com/1/urls/count.json?url={url}&callback=?",
            convertNumber: function(a) {
                return a.count;
            },
            popupUrl: "https://twitter.com/intent/tweet?url={url}&text={title}",
            popupWidth: 600,
            popupHeight: 450,
            click: function() {
                return /[\.\?:\-–—]\s*$/.test(this.options.title) || (this.options.title += ":"), 
                !0;
            }
        },
        mailru: {
            counterUrl: n + "//connect.mail.ru/share_count?url_list={url}&callback=1&func=?",
            convertNumber: function(a) {
                for (var b in a) if (a.hasOwnProperty(b)) return a[b].shares;
            },
            popupUrl: n + "//connect.mail.ru/share?share_url={url}&title={title}",
            popupWidth: 550,
            popupHeight: 360
        },
        vkontakte: {
            counterUrl: "https://vk.com/share.php?act=count&url={url}&index={index}",
            counter: function(b, c) {
                var d = p.vkontakte;
                d._ || (d._ = [], window.VK || (window.VK = {}), window.VK.Share = {
                    count: function(a, b) {
                        d._[a].resolve(b);
                    }
                });
                var e = d._.length;
                d._.push(c), a.getScript(f(b, {
                    index: e
                })).fail(c.reject);
            },
            popupUrl: n + "//vk.com/share.php?url={url}&title={title}",
            popupWidth: 550,
            popupHeight: 330
        },
        odnoklassniki: {
            counterUrl: o ? b : "http://connect.ok.ru/dk?st.cmd=extLike&ref={url}&uid={index}",
            counter: function(b, c) {
                var d = p.odnoklassniki;
                d._ || (d._ = [], window.ODKL || (window.ODKL = {}), window.ODKL.updateCount = function(a, b) {
                    d._[a].resolve(b);
                });
                var e = d._.length;
                d._.push(c), a.getScript(f(b, {
                    index: e
                })).fail(c.reject);
            },
            popupUrl: "http://connect.ok.ru/dk?st.cmd=WidgetSharePreview&service=odnoklassniki&st.shareUrl={url}",
            popupWidth: 550,
            popupHeight: 360
        },
        plusone: {
            counterUrl: o ? b : "http://share.yandex.ru/gpp.xml?url={url}",
            counter: function(b, c) {
                var d = p.plusone;
                return d._ ? void c.reject() : (window.services || (window.services = {}), window.services.gplus = {
                    cb: function(a) {
                        "string" == typeof a && (a = a.replace(/\D/g, "")), d._.resolve(parseInt(a, 10));
                    }
                }, d._ = c, void a.getScript(f(b)).fail(c.reject));
            },
            popupUrl: "https://plus.google.com/share?url={url}",
            popupWidth: 700,
            popupHeight: 500
        },
        pinterest: {
            counterUrl: n + "//api.pinterest.com/v1/urls/count.json?url={url}&callback=?",
            convertNumber: function(a) {
                return a.count;
            },
            popupUrl: n + "//pinterest.com/pin/create/button/?url={url}&description={title}",
            popupWidth: 630,
            popupHeight: 270
        }
    }, q = {
        promises: {},
        fetch: function(b, c, d) {
            q.promises[b] || (q.promises[b] = {});
            var e = q.promises[b];
            if (!d.forceUpdate && e[c]) return e[c];
            var g = a.extend({}, p[b], d), h = a.Deferred(), i = g.counterUrl && f(g.counterUrl, {
                url: c
            });
            return i && a.isFunction(g.counter) ? g.counter(i, h) : g.counterUrl ? a.getJSON(i).done(function(b) {
                try {
                    var c = b;
                    a.isFunction(g.convertNumber) && (c = g.convertNumber(b)), h.resolve(c);
                } catch (a) {
                    h.reject();
                }
            }).fail(h.reject) : h.reject(), e[c] = h.promise(), e[c];
        }
    };
    a.fn.socialLikes = function(b) {
        return this.each(function() {
            var d = a(this), f = d.data(k);
            f ? a.isPlainObject(b) && f.update(b) : (f = new c(d, a.extend({}, a.fn.socialLikes.defaults, b, e(d))), 
            d.data(k, f));
        });
    }, a.fn.socialLikes.defaults = {
        url: window.location.href.replace(window.location.hash, ""),
        title: document.title,
        counters: !0,
        zeroes: !1,
        wait: 500,
        timeout: 1e4,
        popupCheckInterval: 500,
        singleTitle: "Share",
        initHtml: !0
    }, c.prototype = {
        init: function() {
            this.container.addClass(k), this.single = this.container.hasClass(k + "_single"), 
            this.initUserButtons(), this.countersLeft = 0, this.number = 0, this.container.on("counter." + k, a.proxy(this.updateCounter, this));
            var b = this.container.children();
            this.makeSingleButton(), this.buttons = [], b.each(a.proxy(function(b, c) {
                var e = new d(a(c), this.options);
                this.buttons.push(e), e.options.counterUrl && this.countersLeft++;
            }, this)), this.options.counters ? (this.timer = setTimeout(a.proxy(this.appear, this), this.options.wait), 
            this.timeout = setTimeout(a.proxy(this.ready, this, !0), this.options.timeout)) : this.appear();
        },
        initUserButtons: function() {
            !this.userButtonInited && window.socialLikesButtons && a.extend(!0, p, socialLikesButtons), 
            this.userButtonInited = !0;
        },
        makeSingleButton: function() {
            if (this.single) {
                var b = this.container;
                b.addClass(k + "_vertical"), b.wrap(a("<div>", {
                    class: k + "_single-w"
                })), b.wrapInner(a("<div>", {
                    class: k + "__single-container"
                }));
                var c = b.parent(), d = a("<div>", {
                    class: h("widget", "single")
                }), e = a(g('<div class="{buttonCls}"><span class="{iconCls}"></span>{title}</div>', {
                    buttonCls: h("button", "single"),
                    iconCls: h("icon", "single"),
                    title: this.options.singleTitle
                }));
                d.append(e), c.append(d), d.on("click", function() {
                    var a = k + "__widget_active";
                    return d.toggleClass(a), d.hasClass(a) ? (b.css({
                        left: -(b.width() - d.width()) / 2,
                        top: -b.height()
                    }), j(b), i(b, function() {
                        d.removeClass(a);
                    })) : b.removeClass(m), !1;
                }), this.widget = d;
            }
        },
        update: function(b) {
            if (b.forceUpdate || b.url !== this.options.url) {
                this.number = 0, this.countersLeft = this.buttons.length, this.widget && this.widget.find("." + k + "__counter").remove(), 
                a.extend(this.options, b);
                for (var c = 0; c < this.buttons.length; c++) this.buttons[c].update(b);
            }
        },
        updateCounter: function(a, b, c) {
            c && (this.number += c, this.single && this.getCounterElem().text(this.number)), 
            this.countersLeft--, 0 === this.countersLeft && (this.appear(), this.ready());
        },
        appear: function() {
            this.container.addClass(k + "_visible");
        },
        ready: function(a) {
            this.timeout && clearTimeout(this.timeout), this.container.addClass(k + "_ready"), 
            a || this.container.trigger("ready." + k, this.number);
        },
        getCounterElem: function() {
            var b = this.widget.find("." + l + "counter_single");
            return b.length || (b = a("<span>", {
                class: h("counter", "single")
            }), this.widget.append(b)), b;
        }
    }, d.prototype = {
        init: function() {
            this.detectParams(), this.options.initHtml ? this.initHtml() : this.widget.on("click", a.proxy(this.click, this)), 
            setTimeout(a.proxy(this.initCounter, this), 0);
        },
        update: function(b) {
            a.extend(this.options, {
                forceUpdate: !1
            }, b), this.widget.find("." + k + "__counter").remove(), this.initCounter();
        },
        detectService: function() {
            var b = this.widget.data("service");
            if (!b) {
                for (var c = this.widget[0], d = c.classList || c.className.split(" "), e = 0; e < d.length; e++) {
                    var f = d[e];
                    if (p[f]) {
                        b = f;
                        break;
                    }
                }
                if (!b) return;
            }
            this.service = b, a.extend(this.options, p[b]);
        },
        detectParams: function() {
            var a = this.widget.data();
            if (a.counter) {
                var b = parseInt(a.counter, 10);
                isNaN(b) ? this.options.counterUrl = a.counter : this.options.counterNumber = b;
            }
            a.title && (this.options.title = a.title), a.url && (this.options.url = a.url);
        },
        initHtml: function() {
            var b = this.options, c = this.widget, d = c.find("a");
            d.length && this.cloneDataAttrs(d, c);
            var e = a("<span>", {
                class: this.getElementClassNames("button"),
                text: c.text()
            });
            if (b.clickUrl) {
                var g = f(b.clickUrl, {
                    url: b.url,
                    title: b.title
                }), h = a("<a>", {
                    href: g
                });
                this.cloneDataAttrs(c, h), c.replaceWith(h), this.widget = c = h;
            } else c.on("click", a.proxy(this.click, this));
            c.removeClass(this.service), c.addClass(this.getElementClassNames("widget")), e.prepend(a("<span>", {
                class: this.getElementClassNames("icon")
            })), c.empty().append(e), this.button = e;
        },
        initCounter: function() {
            if (this.options.counters) if (this.options.counterNumber) this.updateCounter(this.options.counterNumber); else {
                var b = {
                    counterUrl: this.options.counterUrl,
                    forceUpdate: this.options.forceUpdate
                };
                q.fetch(this.service, this.options.url, b).always(a.proxy(this.updateCounter, this));
            }
        },
        cloneDataAttrs: function(a, b) {
            var c = a.data();
            for (var d in c) c.hasOwnProperty(d) && b.data(d, c[d]);
        },
        getElementClassNames: function(a) {
            return h(a, this.service);
        },
        updateCounter: function(b) {
            b = parseInt(b, 10) || 0;
            var c = {
                class: this.getElementClassNames("counter"),
                text: b
            };
            b || this.options.zeroes || (c.class += " " + k + "__counter_empty", c.text = "");
            var d = a("<span>", c);
            this.widget.append(d), this.widget.trigger("counter." + k, [ this.service, b ]);
        },
        click: function(b) {
            var c = this.options, d = !0;
            if (a.isFunction(c.click) && (d = c.click.call(this, b)), d) {
                var e = f(c.popupUrl, {
                    url: c.url,
                    title: c.title
                });
                e = this.addAdditionalParamsToUrl(e), this.openPopup(e, {
                    width: c.popupWidth,
                    height: c.popupHeight
                });
            }
            return !1;
        },
        addAdditionalParamsToUrl: function(b) {
            var c = a.param(a.extend(this.widget.data(), this.options.data));
            if (a.isEmptyObject(c)) return b;
            var d = b.indexOf("?") === -1 ? "?" : "&";
            return b + d + c;
        },
        openPopup: function(b, c) {
            var d = Math.round(screen.width / 2 - c.width / 2), e = 0;
            screen.height > c.height && (e = Math.round(screen.height / 3 - c.height / 2));
            var f = window.open(b, "sl_" + this.service, "left=" + d + ",top=" + e + ",width=" + c.width + ",height=" + c.height + ",personalbar=0,toolbar=0,scrollbars=1,resizable=1");
            if (f) {
                f.focus(), this.widget.trigger("popup_opened." + k, [ this.service, f ]);
                var g = setInterval(a.proxy(function() {
                    f.closed && (clearInterval(g), this.widget.trigger("popup_closed." + k, this.service));
                }, this), this.options.popupCheckInterval);
            } else location.href = b;
        }
    }, a(function() {
        a("." + k).socialLikes();
    });
});